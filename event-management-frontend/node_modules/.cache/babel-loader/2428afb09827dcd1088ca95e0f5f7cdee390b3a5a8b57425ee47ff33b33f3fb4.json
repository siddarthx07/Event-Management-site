{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CreateEvent from './CreateEvent.vue';\nexport default {\n  components: {\n    CreateEvent\n  },\n  data() {\n    return {\n      events: [],\n      // List of events\n      searchQuery: '',\n      // Search query for name\n      startDate: '',\n      // Start date filter\n      endDate: '' // End date filter\n    };\n  },\n  created() {\n    this.refreshEvents(); // Fetch all events on component creation\n  },\n  methods: {\n    fetchEvents() {\n      // Construct query parameters for filtering\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n\n      // Fetch filtered events based on query parameters\n      axios.get('http://localhost:3000/api/events', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n        }\n      }).then(response => {\n        this.events = response.data; // Update the event list with filtered data\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    clearFilters() {\n      // Clear search query and date filters\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchEvents(); // Fetch all events without filters\n    },\n    refreshEvents() {\n      axios.get('http://localhost:3000/api/events', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n        }\n      }).then(response => {\n        this.events = response.data; // Update event list\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0]; // Format the date as YYYY-MM-DD\n    },\n    editEvent(eventId) {\n      this.$router.push({\n        name: 'edit-event',\n        params: {\n          id: eventId\n        }\n      });\n    },\n    deleteEvent(eventId) {\n      if (confirm('Are you sure you want to delete this event?')) {\n        axios.delete(`http://localhost:3000/api/events/${eventId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n          }\n        }).then(() => {\n          this.refreshEvents(); // Refresh event list after deletion\n        }).catch(error => {\n          console.error('Error deleting event:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","CreateEvent","components","data","events","searchQuery","startDate","endDate","created","refreshEvents","methods","fetchEvents","params","name","get","headers","Authorization","localStorage","getItem","then","response","catch","error","console","clearFilters","formatDate","dateString","date","Date","toISOString","split","editEvent","eventId","$router","push","id","deleteEvent","confirm","delete"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Event List</h2>\n\n    <!-- Search Bar -->\n    <input v-model=\"searchQuery\" placeholder=\"Search by name\" @input=\"fetchEvents\" />\n\n    <!-- Date Range Filter -->\n    <div>\n      <label for=\"startDate\">Start Date:</label>\n      <input type=\"date\" v-model=\"startDate\" @change=\"fetchEvents\" />\n\n      <label for=\"endDate\">End Date:</label>\n      <input type=\"date\" v-model=\"endDate\" @change=\"fetchEvents\" />\n    </div>\n\n    <!-- Clear Filters Button -->\n    <button @click=\"clearFilters\">Clear Filters</button>\n\n    <!-- Create Event Component -->\n    <CreateEvent @event-created=\"refreshEvents\" /> <!-- Only appears once -->\n\n    <!-- Event List -->\n    <ul>\n      <li v-for=\"event in events\" :key=\"event.id\">\n        {{ event.name }} - {{ formatDate(event.date) }}\n        <button @click=\"editEvent(event.id)\">Edit</button>\n        <button @click=\"deleteEvent(event.id)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CreateEvent from './CreateEvent.vue';\n\nexport default {\n  components: {\n    CreateEvent\n  },\n  data() {\n    return {\n      events: [],            // List of events\n      searchQuery: '',        // Search query for name\n      startDate: '',          // Start date filter\n      endDate: ''             // End date filter\n    };\n  },\n  created() {\n    this.refreshEvents();  // Fetch all events on component creation\n  },\n  methods: {\n    fetchEvents() {\n      // Construct query parameters for filtering\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n\n      // Fetch filtered events based on query parameters\n      axios.get('http://localhost:3000/api/events', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n        }\n      })\n      .then(response => {\n        this.events = response.data;  // Update the event list with filtered data\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    clearFilters() {\n      // Clear search query and date filters\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchEvents();  // Fetch all events without filters\n    },\n    refreshEvents() {\n      axios.get('http://localhost:3000/api/events', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n        }\n      })\n      .then(response => {\n        this.events = response.data;  // Update event list\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];  // Format the date as YYYY-MM-DD\n    },\n    editEvent(eventId) {\n      this.$router.push({ name: 'edit-event', params: { id: eventId } });\n    },\n    deleteEvent(eventId) {\n      if (confirm('Are you sure you want to delete this event?')) {\n        axios.delete(`http://localhost:3000/api/events/${eventId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token in the request header\n          }\n        })\n        .then(() => {\n          this.refreshEvents();  // Refresh event list after deletion\n        })\n        .catch(error => {\n          console.error('Error deleting event:', error);\n        });\n      }\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}