{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      showPassword: false // For password visibility toggle\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async register() {\n      try {\n        // Optionally, you can add client-side validation here\n\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n        console.log('Registration successful:', response.data);\n        alert('Registration successful! Redirecting to login...');\n        this.$router.push('/login'); // Redirect to login page after registration\n      } catch (error) {\n        console.error('Registration error:', error);\n        // Handle specific error messages based on backend response\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(`Registration failed: ${error.response.data.message}`);\n        } else {\n          alert('Registration failed, please try again.');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","email","password","showPassword","methods","togglePasswordVisibility","register","response","post","console","log","alert","$router","push","error","message"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Sign Up</h2>\n    <form @submit.prevent=\"register\" class=\"register-form\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          v-model=\"username\"\n          id=\"username\"\n          placeholder=\"Enter your username\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          v-model=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          :type=\"showPassword ? 'text' : 'password'\"\n          v-model=\"password\"\n          id=\"password\"\n          placeholder=\"Create a password\"\n          required\n        />\n        <button type=\"button\" class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n          {{ showPassword ? 'Hide' : 'Show' }}\n        </button>\n      </div>\n      <button type=\"submit\" class=\"btn\">Register</button>\n    </form>\n    <p class=\"login-link\">\n      Already have an account? <router-link to=\"/login\">Sign In</router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      showPassword: false, // For password visibility toggle\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async register() {\n      try {\n        // Optionally, you can add client-side validation here\n\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n\n        console.log('Registration successful:', response.data);\n\n        alert('Registration successful! Redirecting to login...');\n        this.$router.push('/login'); // Redirect to login page after registration\n      } catch (error) {\n        console.error('Registration error:', error);\n        // Handle specific error messages based on backend response\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(`Registration failed: ${error.response.data.message}`);\n        } else {\n          alert('Registration failed, please try again.');\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* CSS Variables for Consistent Styling */\n:root {\n  --primary-color: #007BFF;\n  --primary-hover: #0056b3;\n  --input-border: #cccccc;\n  --input-focus-shadow: rgba(0, 123, 255, 0.2);\n  --text-color: #333333;\n  --label-color: #555555;\n  --link-color: #007BFF;\n  --muted-color: #666666;\n  --button-text-color: #ffffff;\n}\n\n/* Overall container styling */\n.register-container {\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 40px 30px;\n  background-color: #ffffff;\n  border: 1px solid #e0e0e0;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* Title styling */\n.register-title {\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 28px;\n  color: var(--text-color);\n}\n\n/* Form styling */\n.register-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* Center the form elements horizontally */\n}\n\n/* Form Group styling */\n.form-group {\n  width: 100%;\n  margin-bottom: 20px;\n  position: relative; /* For positioning the password toggle button */\n}\n\n/* Label styling */\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--label-color);\n  text-align: left; /* Align labels to the left within the form group */\n}\n\n/* Input styling */\n.form-group input {\n  width: 100%;\n  padding: 12px 15px;\n  padding-right: 60px; /* Space for the toggle button */\n  border: 1px solid var(--input-border);\n  border-radius: 5px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n/* Input focus styling */\n.form-group input:focus {\n  border-color: var(--primary-color);\n  outline: none;\n  box-shadow: 0 0 5px var(--input-focus-shadow);\n}\n\n/* Password toggle button styling */\n.toggle-password {\n  position: absolute;\n  top: 35px;\n  right: 15px;\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.toggle-password:focus {\n  outline: none;\n}\n\n/* Button styling */\n.btn {\n  width: 100%;\n  padding: 12px 0;\n  background-color: var(--primary-color);\n  border: none;\n  border-radius: 5px;\n  color: var(--button-text-color);\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn:hover {\n  background-color: var(--primary-hover);\n}\n\n/* Login link styling */\n.login-link {\n  text-align: center;\n  margin-top: 20px;\n  color: var(--muted-color);\n  font-size: 14px;\n}\n\n.login-link a {\n  color: var(--link-color);\n  text-decoration: none;\n  font-weight: 500;\n}\n\n.login-link a:hover {\n  text-decoration: underline;\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .register-container {\n    padding: 30px 20px;\n    margin: 60px auto;\n  }\n\n  .register-title {\n    font-size: 24px;\n  }\n\n  .btn {\n    font-size: 16px;\n  }\n\n  .toggle-password {\n    top: 30px;\n    right: 10px;\n    font-size: 12px;\n  }\n}\n</style>\n"],"mappings":";AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,KAAK,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACF,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACD,MAAMG,QAAQA,CAAA,EAAG;MACf,IAAI;QACF;;QAEA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,yCAAyC,EAAE;UAC3ER,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEFO,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACR,IAAI,CAAC;QAEtDY,KAAK,CAAC,kDAAkD,CAAC;QACzD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;QACA,IAAIA,KAAK,CAACP,QAAO,IAAKO,KAAK,CAACP,QAAQ,CAACR,IAAG,IAAKe,KAAK,CAACP,QAAQ,CAACR,IAAI,CAACgB,OAAO,EAAE;UACxEJ,KAAK,CAAC,wBAAwBG,KAAK,CAACP,QAAQ,CAACR,IAAI,CAACgB,OAAO,EAAE,CAAC;QAC9D,OAAO;UACLJ,KAAK,CAAC,wCAAwC,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}