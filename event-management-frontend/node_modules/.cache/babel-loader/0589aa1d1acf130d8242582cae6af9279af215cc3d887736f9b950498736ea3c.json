{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      events: [],\n      searchQuery: '',\n      startDate: '',\n      endDate: ''\n    };\n  },\n  created() {\n    this.fetchEvents();\n  },\n  methods: {\n    fetchEvents() {\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n      axios.get('http://localhost:3000/api/events', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        this.events = response.data;\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    clearFilters() {\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchEvents();\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    },\n    scrollEvents(direction) {\n      const container = document.querySelector('.event-list-container');\n      const scrollAmount = 320; // Card width + gap\n      if (container) {\n        container.scrollBy({\n          left: direction === 'right' ? scrollAmount : -scrollAmount,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","events","searchQuery","startDate","endDate","created","fetchEvents","methods","params","name","get","headers","Authorization","localStorage","getItem","then","response","catch","error","console","clearFilters","formatDate","dateString","date","Date","toISOString","split","scrollEvents","direction","container","document","querySelector","scrollAmount","scrollBy","left","behavior"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventListPublic.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2 class=\"text-center mb-4\">Event List</h2>\n\n    <!-- Search Bar -->\n    <div class=\"mb-3\">\n      <input \n        v-model=\"searchQuery\" \n        class=\"form-control\" \n        placeholder=\"Search by name\" \n        @input=\"fetchEvents\" \n      />\n    </div>\n\n    <!-- Date Range Filter -->\n    <div class=\"d-flex justify-content-between mb-3\">\n      <div>\n        <label for=\"startDate\">Start Date:</label>\n        <input \n          type=\"date\" \n          v-model=\"startDate\" \n          class=\"form-control\" \n          @change=\"fetchEvents\" \n        />\n      </div>\n      <div>\n        <label for=\"endDate\">End Date:</label>\n        <input \n          type=\"date\" \n          v-model=\"endDate\" \n          class=\"form-control\" \n          @change=\"fetchEvents\" \n        />\n      </div>\n    </div>\n\n    <!-- Navigation Buttons -->\n    <div class=\"navigation-buttons\">\n      <button \n        @click=\"scrollEvents('left')\" \n        class=\"nav-btn\"\n      >\n        ←\n      </button>\n      <button \n        @click=\"scrollEvents('right')\" \n        class=\"nav-btn\"\n      >\n        →\n      </button>\n    </div>\n\n    <div v-if=\"events.length\" class=\"event-list-container\">\n      <div \n        v-for=\"event in events\" \n        :key=\"event.id\" \n        class=\"card h-100 event-card\"\n      >\n        <img \n          :src=\"event.image ? `http://localhost:3000${event.image}` : 'http://localhost:3000/uploads/default-image.jpg'\" \n          alt=\"Event Image\" \n          class=\"card-img-top\"\n        />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ event.name }}</h5>\n          <p class=\"card-text\"><strong>Date:</strong> {{ formatDate(event.date) }}</p>\n          <router-link \n            :to=\"{ name: 'event-details-public', params: { id: event.id } }\" \n            class=\"btn btn-primary mt-3\"\n          >\n            View Details\n          </router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      events: [],\n      searchQuery: '',\n      startDate: '',\n      endDate: ''\n    };\n  },\n  created() {\n    this.fetchEvents();\n  },\n  methods: {\n    fetchEvents() {\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n      axios.get('http://localhost:3000/api/events', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })\n      .then(response => {\n        this.events = response.data;\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    clearFilters() {\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchEvents();\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    },\n    scrollEvents(direction) {\n      const container = document.querySelector('.event-list-container');\n      const scrollAmount = 320; // Card width + gap\n      if (container) {\n        container.scrollBy({\n          left: direction === 'right' ? scrollAmount : -scrollAmount,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.navigation-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-bottom: 10px;\n  padding-right: 10px;\n}\n\n.nav-btn {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.nav-btn:hover {\n  background-color: #0056b3;\n}\n\n.event-list-container {\n  display: flex;\n  overflow-x: hidden;\n  gap: 16px;\n  padding: 10px;\n  scroll-behavior: smooth;\n}\n\n.event-card {\n  flex: 0 0 auto;\n  width: 300px;\n}\n\n.card {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n}\n\n.card-img-top {\n  height: 200px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin: 50px;\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 1.25rem;\n  margin-bottom: 10px;\n}\n\n.btn {\n  width: 10%;\n}\n</style>"],"mappings":"AA+EA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ,MAAME,MAAK,GAAI;QACbC,IAAI,EAAE,IAAI,CAACP,WAAW;QACtBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC;MACDL,KAAK,CAACW,GAAG,CAAC,kCAAkC,EAAE;QAC5CF,MAAM;QACNG,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACf,MAAK,GAAIe,QAAQ,CAAChB,IAAI;MAC7B,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAAClB,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI,CAACE,WAAW,CAAC,CAAC;IACpB,CAAC;IACDe,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IACDC,YAAYA,CAACC,SAAS,EAAE;MACtB,MAAMC,SAAQ,GAAIC,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;MACjE,MAAMC,YAAW,GAAI,GAAG,EAAE;MAC1B,IAAIH,SAAS,EAAE;QACbA,SAAS,CAACI,QAAQ,CAAC;UACjBC,IAAI,EAAEN,SAAQ,KAAM,OAAM,GAAII,YAAW,GAAI,CAACA,YAAY;UAC1DG,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}