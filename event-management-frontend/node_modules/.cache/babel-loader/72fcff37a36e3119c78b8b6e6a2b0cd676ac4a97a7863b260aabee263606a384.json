{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      showPassword: false,\n      backgroundImages: ['https://images.unsplash.com/photo-1492684223066-81342ee5ff30',\n      // Concert\n      'https://images.unsplash.com/photo-1514525253161-7a46d19cd819',\n      // Festival\n      'https://images.unsplash.com/photo-1540575467063-178a50c2df87',\n      // Conference\n      'https://images.unsplash.com/photo-1511795409834-ef04bbd61622',\n      // Party\n      'https://images.unsplash.com/photo-1505236858219-8359eb29e329' // Sports event\n      ],\n      currentBackground: ''\n    };\n  },\n  computed: {\n    backgroundStyle() {\n      return {\n        backgroundImage: `url(${this.currentBackground})`\n      };\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        const {\n          token,\n          username\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n\n        // Add loading state or transition before redirect\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error('Login error:', error);\n        // You could add a more sophisticated error handling UI here\n        alert('Login failed, please try again.');\n      }\n    },\n    getRandomBackground() {\n      const randomIndex = Math.floor(Math.random() * this.backgroundImages.length);\n      this.currentBackground = this.backgroundImages[randomIndex];\n    }\n  },\n  mounted() {\n    this.getRandomBackground();\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","showPassword","backgroundImages","currentBackground","computed","backgroundStyle","backgroundImage","methods","login","response","post","token","username","localStorage","setItem","$root","$router","push","error","console","alert","getRandomBackground","randomIndex","Math","floor","random","length","mounted"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\" :style=\"backgroundStyle\">\n    <div class=\"overlay\"></div>\n    <div class=\"login-card\">\n      <h2 class=\"login-title\">Welcome Back</h2>\n      <form @submit.prevent=\"login\" class=\"login-form\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <div class=\"input-wrapper\">\n            <input \n              type=\"email\" \n              v-model=\"email\" \n              id=\"email\" \n              required\n              class=\"form-input\"\n              :class=\"{ 'has-value': email }\"\n            />\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <div class=\"input-wrapper\">\n            <input \n              :type=\"showPassword ? 'text' : 'password'\"\n              v-model=\"password\" \n              id=\"password\" \n              required\n              class=\"form-input\"\n              :class=\"{ 'has-value': password }\"\n            />\n            <span \n              class=\"password-toggle\"\n              @click=\"showPassword = !showPassword\"\n            >\n              {{ showPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è' }}\n            </span>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"login-button\">\n          <span class=\"button-text\">Sign In</span>\n        </button>\n      </form>\n\n      <div class=\"signup-link\">\n        Don't have an account? \n        <router-link to=\"/register\" class=\"link\">Sign Up</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      showPassword: false,\n      backgroundImages: [\n        'https://images.unsplash.com/photo-1492684223066-81342ee5ff30', // Concert\n        'https://images.unsplash.com/photo-1514525253161-7a46d19cd819', // Festival\n        'https://images.unsplash.com/photo-1540575467063-178a50c2df87', // Conference\n        'https://images.unsplash.com/photo-1511795409834-ef04bbd61622', // Party\n        'https://images.unsplash.com/photo-1505236858219-8359eb29e329', // Sports event\n      ],\n      currentBackground: ''\n    };\n  },\n  computed: {\n    backgroundStyle() {\n      return {\n        backgroundImage: `url(${this.currentBackground})`,\n      };\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        \n        const { token, username } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n        \n        // Add loading state or transition before redirect\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error('Login error:', error);\n        // You could add a more sophisticated error handling UI here\n        alert('Login failed, please try again.');\n      }\n    },\n    getRandomBackground() {\n      const randomIndex = Math.floor(Math.random() * this.backgroundImages.length);\n      this.currentBackground = this.backgroundImages[randomIndex];\n    }\n  },\n  mounted() {\n    this.getRandomBackground();\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  transition: background-image 0.5s ease-in-out;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(8px);\n}\n\n.login-card {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 2.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  position: relative;\n  z-index: 1;\n  animation: slideUp 0.5s ease-out;\n}\n\n.login-title {\n  font-size: 1.8rem;\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  text-align: center;\n  font-weight: 600;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #505d68;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.input-wrapper {\n  position: relative;\n}\n\n.form-input {\n  width: 100%;\n  padding: 0.8rem 1rem;\n  border: 2px solid #e1e8ed;\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  background: white;\n}\n\n.form-input:focus {\n  border-color: #3498db;\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  outline: none;\n}\n\n.form-input.has-value {\n  border-color: #2ecc71;\n}\n\n.password-toggle {\n  position: absolute;\n  right: 1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  user-select: none;\n}\n\n.login-button {\n  width: 100%;\n  padding: 1rem;\n  background: #3498db;\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 1rem;\n}\n\n.login-button:hover {\n  background: #2980b9;\n  transform: translateY(-1px);\n}\n\n.login-button:active {\n  transform: translateY(0);\n}\n\n.signup-link {\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #7f8c8d;\n}\n\n.link {\n  color: #3498db;\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.3s ease;\n}\n\n.link:hover {\n  color: #2980b9;\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Responsive adjustments */\n@media (max-width: 480px) {\n  .login-card {\n    margin: 1rem;\n    padding: 1.5rem;\n  }\n}\n</style>"],"mappings":";AAsDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,KAAK;MACnBC,gBAAgB,EAAE,CAChB,8DAA8D;MAAE;MAChE,8DAA8D;MAAE;MAChE,8DAA8D;MAAE;MAChE,8DAA8D;MAAE;MAChE,8DAA8D,CAAE;MAAA,CACjE;MACDC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB,OAAO;QACLC,eAAe,EAAE,OAAO,IAAI,CAACH,iBAAiB;MAChD,CAAC;IACH;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,sCAAsC,EAAE;UACxEX,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAM;UAAEW,KAAK;UAAEC;QAAS,IAAIH,QAAQ,CAACX,IAAI;QACzCe,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;QACpCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;QAC1C,IAAI,CAACG,KAAK,CAACJ,KAAI,GAAIA,KAAK;QACxB,IAAI,CAACI,KAAK,CAACH,QAAO,GAAIA,QAAQ;;QAE9B;QACA,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC;QACAE,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,IAAI,CAACvB,gBAAgB,CAACwB,MAAM,CAAC;MAC5E,IAAI,CAACvB,iBAAgB,GAAI,IAAI,CAACD,gBAAgB,CAACoB,WAAW,CAAC;IAC7D;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,mBAAmB,CAAC,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}