{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        const token = response.data.token;\n        const username = response.data.username;\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n\n        // Add success animation before redirect\n        this.$notify({\n          type: 'success',\n          text: 'Login successful!'\n        });\n        setTimeout(() => {\n          this.$router.push('/dashboard');\n        }, 1000);\n      } catch (error) {\n        console.error('Login error:', error);\n        this.$notify({\n          type: 'error',\n          text: 'Login failed, please try again.'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","methods","login","response","post","token","username","localStorage","setItem","$root","$notify","type","text","setTimeout","$router","push","error","console"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600\">\n    <div class=\"login-container bg-white p-8 rounded-lg shadow-2xl w-96 transform hover:scale-105 transition-all duration-300\">\n      <h2 class=\"text-3xl font-bold text-center mb-8 text-gray-800 animate-fade-in\">Welcome Back</h2>\n      \n      <form @submit.prevent=\"login\" class=\"space-y-6\">\n        <div class=\"form-group\">\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n          <div class=\"relative\">\n            <input \n              type=\"email\" \n              v-model=\"email\" \n              id=\"email\" \n              required\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 outline-none\"\n              :class=\"{ 'input-filled': email }\"\n            />\n            <span class=\"input-border\"></span>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n          <div class=\"relative\">\n            <input \n              type=\"password\" \n              v-model=\"password\" \n              id=\"password\" \n              required\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 outline-none\"\n              :class=\"{ 'input-filled': password }\"\n            />\n            <span class=\"input-border\"></span>\n          </div>\n        </div>\n\n        <button \n          type=\"submit\"\n          class=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-2 rounded-lg hover:from-blue-600 hover:to-blue-700 transform hover:-translate-y-1 transition-all duration-300 font-medium\"\n        >\n          Sign In\n        </button>\n      </form>\n\n      <div class=\"mt-6 text-center text-gray-600\">\n        <p>Don't have an account? \n          <router-link \n            to=\"/register\" \n            class=\"text-blue-500 hover:text-blue-700 font-medium transition-colors duration-300\"\n          >\n            Sign Up\n          </router-link>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        \n        const token = response.data.token;\n        const username = response.data.username;\n        \n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n        \n        // Add success animation before redirect\n        this.$notify({\n          type: 'success',\n          text: 'Login successful!'\n        });\n        \n        setTimeout(() => {\n          this.$router.push('/dashboard');\n        }, 1000);\n        \n      } catch (error) {\n        console.error('Login error:', error);\n        this.$notify({\n          type: 'error',\n          text: 'Login failed, please try again.'\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  animation: slideUp 0.5s ease-out;\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.8s ease-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.form-group {\n  position: relative;\n}\n\n.input-border {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  width: 0;\n  height: 2px;\n  background: linear-gradient(to right, #3B82F6, #6366F1);\n  transition: width 0.3s ease-out, left 0.3s ease-out;\n}\n\ninput:focus ~ .input-border {\n  width: 100%;\n  left: 0;\n}\n\n.input-filled {\n  border-color: #3B82F6;\n}\n\n/* Add smooth transition for input states */\ninput {\n  transition: all 0.3s ease;\n}\n\ninput:focus {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.1);\n}\n\n/* Button hover effect */\nbutton:hover {\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);\n}\n\n/* Optional: Add loading spinner for button */\n.loading {\n  position: relative;\n  pointer-events: none;\n}\n\n.loading:after {\n  content: '';\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  top: 50%;\n  left: 50%;\n  margin: -10px 0 0 -10px;\n  border: 2px solid #ffffff;\n  border-radius: 50%;\n  border-right-color: transparent;\n  animation: spin 0.8s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>"],"mappings":";AA2DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,sCAAsC,EAAE;UACxEL,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAMK,KAAI,GAAIF,QAAQ,CAACL,IAAI,CAACO,KAAK;QACjC,MAAMC,QAAO,GAAIH,QAAQ,CAACL,IAAI,CAACQ,QAAQ;QAEvCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;QACpCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;QAC1C,IAAI,CAACG,KAAK,CAACJ,KAAI,GAAIA,KAAK;QACxB,IAAI,CAACI,KAAK,CAACH,QAAO,GAAIA,QAAQ;;QAE9B;QACA,IAAI,CAACI,OAAO,CAAC;UACXC,IAAI,EAAE,SAAS;UACfC,IAAI,EAAE;QACR,CAAC,CAAC;QAEFC,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,CAAC,EAAE,IAAI,CAAC;MAEV,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,IAAI,CAACN,OAAO,CAAC;UACXC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}