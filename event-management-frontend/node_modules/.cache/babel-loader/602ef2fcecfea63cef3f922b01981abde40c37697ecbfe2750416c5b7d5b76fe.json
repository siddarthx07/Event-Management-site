{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateEvent = _resolveComponent(\"CreateEvent\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Event List\", -1 /* HOISTED */)), _createCommentVNode(\" Search Bar \"), _cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"searchQuery\"\n  }, \"Search by name or description:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"searchQuery\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Search by name or description\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.fetchEvents && $options.fetchEvents(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createCommentVNode(\" Date Range Filter \"), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"startDate\"\n  }, \"Start Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"startDate\",\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.startDate = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.fetchEvents && $options.fetchEvents(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.startDate]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"endDate\"\n  }, \"End Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"endDate\",\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.endDate = $event),\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.fetchEvents && $options.fetchEvents(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.endDate]])]), _createCommentVNode(\" Clear Filters Button \"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.clearFilters && $options.clearFilters(...args))\n  }, \"Clear Filters\"), _createCommentVNode(\" Create Event Component \"), _createVNode(_component_CreateEvent, {\n    onEventCreated: $options.refreshEvents\n  }, null, 8 /* PROPS */, [\"onEventCreated\"]), _createCommentVNode(\" Only appears once \"), _createCommentVNode(\" Event List \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.events, event => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: event.id\n    }, [_createTextVNode(_toDisplayString(event.name) + \" - \" + _toDisplayString($options.formatDate(event.date)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editEvent(event.id)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteEvent(event.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createCommentVNode","for","id","_cache","$event","$data","searchQuery","placeholder","onInput","args","$options","fetchEvents","type","startDate","onChange","endDate","onClick","clearFilters","_createVNode","_component_CreateEvent","onEventCreated","refreshEvents","_Fragment","_renderList","events","event","key","_createTextVNode","_toDisplayString","name","formatDate","date","editEvent","_hoisted_1","deleteEvent","_hoisted_2"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Event List</h2>\n\n    <!-- Search Bar -->\n    <label for=\"searchQuery\">Search by name or description:</label>\n    <input id=\"searchQuery\" v-model=\"searchQuery\" placeholder=\"Search by name or description\" @input=\"fetchEvents\" />\n\n    <!-- Date Range Filter -->\n    <div>\n      <label for=\"startDate\">Start Date:</label>\n      <input id=\"startDate\" type=\"date\" v-model=\"startDate\" @change=\"fetchEvents\" />\n\n      <label for=\"endDate\">End Date:</label>\n      <input id=\"endDate\" type=\"date\" v-model=\"endDate\" @change=\"fetchEvents\" />\n    </div>\n\n    <!-- Clear Filters Button -->\n    <button @click=\"clearFilters\">Clear Filters</button>\n\n    <!-- Create Event Component -->\n    <CreateEvent @event-created=\"refreshEvents\" /> <!-- Only appears once -->\n\n    <!-- Event List -->\n    <ul>\n      <li v-for=\"event in events\" :key=\"event.id\">\n        {{ event.name }} - {{ formatDate(event.date) }}\n        <button @click=\"editEvent(event.id)\">Edit</button>\n        <button @click=\"deleteEvent(event.id)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CreateEvent from './CreateEvent.vue';\n\nexport default {\n  components: {\n    CreateEvent\n  },\n  data() {\n    return {\n      events: [],            // List of events\n      searchQuery: '',        // Search query for name/description\n      startDate: '',          // Start date filter\n      endDate: ''             // End date filter\n    };\n  },\n  created() {\n    this.refreshEvents();  // Fetch all events on component creation\n  },\n  methods: {\n    fetchEvents() {\n      // Construct query parameters for filtering\n      const params = {\n        name: this.searchQuery,\n        description: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n\n      // Fetch filtered events based on query parameters\n      axios.get('http://localhost:3000/api/events', { params })\n        .then(response => {\n          this.events = response.data;  // Update the event list with filtered data\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n    clearFilters() {\n      // Clear search query and date filters\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchEvents();  // Fetch all events without filters\n    },\n    refreshEvents() {\n      axios.get('http://localhost:3000/api/events')\n        .then(response => {\n          this.events = response.data;  // Update event list\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];  // Format the date as YYYY-MM-DD\n    },\n    editEvent(eventId) {\n      this.$router.push({ name: 'edit-event', params: { id: eventId } });\n    },\n    deleteEvent(eventId) {\n      if (confirm('Are you sure you want to delete this event?')) {\n        axios.delete(`http://localhost:3000/api/events/${eventId}`)\n          .then(() => {\n            this.refreshEvents();  // Refresh event list after deletion\n          })\n          .catch(error => {\n            console.error('Error deleting event:', error);\n          });\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";mBAAA;mBAAA;;;uBACEA,mBAAA,CA8BM,c,0BA7BJC,mBAAA,CAAmB,YAAf,YAAU,sBAEdC,mBAAA,gBAAmB,E,4BACnBD,mBAAA,CAA+D;IAAxDE,GAAG,EAAC;EAAa,GAAC,gCAA8B,sB,gBACvDF,mBAAA,CAAiH;IAA1GG,EAAE,EAAC,aAAa;IAN3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMqCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC,+BAA+B;IAAEC,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;iEAA5EJ,KAAA,CAAAC,WAAW,E,GAE5CN,mBAAA,uBAA0B,EAC1BD,mBAAA,CAMM,c,0BALJA,mBAAA,CAA0C;IAAnCE,GAAG,EAAC;EAAW,GAAC,aAAW,sB,gBAClCF,mBAAA,CAA8E;IAAvEG,EAAE,EAAC,WAAW;IAACU,IAAI,EAAC,MAAM;IAXvC,uBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWiDC,KAAA,CAAAQ,SAAS,GAAAT,MAAA;IAAGU,QAAM,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;iEAA/BJ,KAAA,CAAAQ,SAAS,E,6BAEpDd,mBAAA,CAAsC;IAA/BE,GAAG,EAAC;EAAS,GAAC,WAAS,sB,gBAC9BF,mBAAA,CAA0E;IAAnEG,EAAE,EAAC,SAAS;IAACU,IAAI,EAAC,MAAM;IAdrC,uBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc+CC,KAAA,CAAAU,OAAO,GAAAX,MAAA;IAAGU,QAAM,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;iEAA7BJ,KAAA,CAAAU,OAAO,E,KAGlDf,mBAAA,0BAA6B,EAC7BD,mBAAA,CAAoD;IAA3CiB,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAO,YAAA,IAAAP,QAAA,CAAAO,YAAA,IAAAR,IAAA,CAAY;KAAE,eAAa,GAE3CT,mBAAA,4BAA+B,EAC/BkB,YAAA,CAA8CC,sBAAA;IAAhCC,cAAa,EAAEV,QAAA,CAAAW;EAAa,6CAAKrB,mBAAA,uBAA0B,EAEzEA,mBAAA,gBAAmB,EACnBD,mBAAA,CAMK,c,kBALHD,mBAAA,CAIKwB,SAAA,QA7BXC,WAAA,CAyB0BlB,KAAA,CAAAmB,MAAM,EAAfC,KAAK;yBAAhB3B,mBAAA,CAIK;MAJwB4B,GAAG,EAAED,KAAK,CAACvB;QAzB9CyB,gBAAA,CAAAC,gBAAA,CA0BWH,KAAK,CAACI,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGlB,QAAA,CAAAoB,UAAU,CAACL,KAAK,CAACM,IAAI,KAAI,GAC/C,iBAAAhC,mBAAA,CAAkD;MAAzCiB,OAAK,EAAAZ,MAAA,IAAEM,QAAA,CAAAsB,SAAS,CAACP,KAAK,CAACvB,EAAE;OAAG,MAAI,iBA3BjD+B,UAAA,GA4BQlC,mBAAA,CAAsD;MAA7CiB,OAAK,EAAAZ,MAAA,IAAEM,QAAA,CAAAwB,WAAW,CAACT,KAAK,CAACvB,EAAE;OAAG,QAAM,iBA5BrDiC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}