{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.events, event => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: event.id\n    }, [_createTextVNode(_toDisplayString(event.name) + \" - \" + _toDisplayString($options.formatDate(event.date)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.testClick && $options.testClick(...args))\n    }, \"Test Button\")]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","events","event","key","id","_createTextVNode","_toDisplayString","name","$options","formatDate","date","_createElementVNode","onClick","_cache","args","testClick"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EditEvent.vue"],"sourcesContent":["<template>\n  <ul>\n    <li v-for=\"event in events\" :key=\"event.id\">\n      {{ event.name }} - {{ formatDate(event.date) }}\n    <button @click=\"testClick\">Test Button</button>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      events: []  // Store the list of events\n    };\n  },\n  created() {\n    // Fetch all events when the component is created\n    axios.get('http://localhost:3000/api/events')\n      .then(response => {\n        this.events = response.data;\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n  },\n  methods: {\n      testClick() {\n    console.log(\"Test button clicked!\");  // Check if this simple button works\n  },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];  // Formats the date as YYYY-MM-DD\n    },\n    editEvent(eventId) {\n    console.log(`Navigating to edit event with ID: ${eventId}`);\n    this.$router.push({ name: 'edit-event', params: { id: eventId } });\n  }\n  }\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAKK,c,kBAJHA,mBAAA,CAGKC,SAAA,QALTC,WAAA,CAEwBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBL,mBAAA,CAGK;MAHwBM,GAAG,EAAED,KAAK,CAACE;QAF5CC,gBAAA,CAAAC,gBAAA,CAGSJ,KAAK,CAACK,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGE,QAAA,CAAAC,UAAU,CAACP,KAAK,CAACQ,IAAI,KAAI,GACjD,iBAAAC,mBAAA,CAA+C;MAAtCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,QAAA,CAAAO,SAAA,IAAAP,QAAA,CAAAO,SAAA,IAAAD,IAAA,CAAS;OAAE,aAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}