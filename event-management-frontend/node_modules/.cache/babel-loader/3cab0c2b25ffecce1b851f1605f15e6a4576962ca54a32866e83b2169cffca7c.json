{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n\n// Define the event images using absolute paths\nconst eventImages = ['/assets/events/pexels-bertellifotografia-2608517.jpg', '/assets/events/pexels-bertellifotografia-29406512.jpg', '/assets/events/pexels-ezequiel-alfonso-3234743-29347735.jpg', '/assets/events/pexels-franco-monsalvo-252430633-29356373.jpg', '/assets/events/pexels-icsa-833425-1709003.jpg', '/assets/events/pexels-israyosoy-29436830.jpg', '/assets/events/pexels-israyosoy-29436916.jpg', '/assets/events/pexels-jonathanborba-29382709.jpg', '/assets/events/pexels-juan-felipe-ramirez-312591454-29361381.jpg', '/assets/events/pexels-osvaldosam-29367552.jpg', '/assets/events/pexels-pixabay-433452.jpg', '/assets/events/pexels-sandra-nanteza-532613123-29370058.jpg', '/assets/events/pexels-sandra-nanteza-532613123-29370382.jpg', '/assets/events/pexels-srivathsa-3760743-29345538.jpg', '/assets/events/pexels-zhuhehuai-716276.jpg', '/assets/events/photo-1492684223066-81342ee5ff30.jpeg'];\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      backgroundImage: '' // To store the selected background image\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        const token = response.data.token;\n        const username = response.data.username;\n        console.log('Token:', token);\n\n        // Store token and username in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n\n        // After storing in localStorage, also update Vue's reactive `token` and `username` data\n        this.$root.token = token; // Ensure Vue's reactivity kicks in\n        this.$root.username = username; // Update username reactively\n\n        alert('Login successful!');\n        this.$router.push('/dashboard'); // Redirect to dashboard or home page\n      } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed, please try again.');\n      }\n    },\n    setRandomBackground() {\n      const randomIndex = Math.floor(Math.random() * eventImages.length);\n      this.backgroundImage = eventImages[randomIndex];\n    }\n  },\n  mounted() {\n    this.setRandomBackground();\n  }\n};","map":{"version":3,"names":["axios","eventImages","name","data","email","password","backgroundImage","methods","login","response","post","token","username","console","log","localStorage","setItem","$root","alert","$router","push","error","setRandomBackground","randomIndex","Math","floor","random","length","mounted"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Login.vue"],"sourcesContent":["<!-- src/components/LoginPage.vue -->\n\n<template>\n  <div class=\"login-container\" :style=\"{ backgroundImage: 'url(' + backgroundImage + ')' }\">\n    <div class=\"overlay\">\n      <div class=\"login-card\">\n        <h2>Sign In</h2>\n        <form @submit.prevent=\"login\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" v-model=\"email\" id=\"email\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" v-model=\"password\" id=\"password\" required />\n          </div>\n          <button type=\"submit\" class=\"login-button\">Login</button>\n        </form>\n        <p>Don't have an account? <router-link to=\"/register\">Sign Up</router-link></p>\n      </div>\n    </div>\n  </div>\n</template>\n\n \n<script>\nimport axios from 'axios';\n\n// Define the event images using absolute paths\nconst eventImages = [\n  '/assets/events/pexels-bertellifotografia-2608517.jpg',\n  '/assets/events/pexels-bertellifotografia-29406512.jpg',\n  '/assets/events/pexels-ezequiel-alfonso-3234743-29347735.jpg',\n  '/assets/events/pexels-franco-monsalvo-252430633-29356373.jpg',\n  '/assets/events/pexels-icsa-833425-1709003.jpg',\n  '/assets/events/pexels-israyosoy-29436830.jpg',\n  '/assets/events/pexels-israyosoy-29436916.jpg',\n  '/assets/events/pexels-jonathanborba-29382709.jpg',\n  '/assets/events/pexels-juan-felipe-ramirez-312591454-29361381.jpg',\n  '/assets/events/pexels-osvaldosam-29367552.jpg',\n  '/assets/events/pexels-pixabay-433452.jpg',\n  '/assets/events/pexels-sandra-nanteza-532613123-29370058.jpg',\n  '/assets/events/pexels-sandra-nanteza-532613123-29370382.jpg',\n  '/assets/events/pexels-srivathsa-3760743-29345538.jpg',\n  '/assets/events/pexels-zhuhehuai-716276.jpg',\n  '/assets/events/photo-1492684223066-81342ee5ff30.jpeg',\n];\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      backgroundImage: '', // To store the selected background image\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password,\n        });\n\n        const token = response.data.token;\n        const username = response.data.username;\n\n        console.log('Token:', token);\n\n        // Store token and username in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n\n        // After storing in localStorage, also update Vue's reactive `token` and `username` data\n        this.$root.token = token; // Ensure Vue's reactivity kicks in\n        this.$root.username = username; // Update username reactively\n\n        alert('Login successful!');\n        this.$router.push('/dashboard'); // Redirect to dashboard or home page\n      } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed, please try again.');\n      }\n    },\n    setRandomBackground() {\n      const randomIndex = Math.floor(Math.random() * eventImages.length);\n      this.backgroundImage = eventImages[randomIndex];\n    },\n  },\n  mounted() {\n    this.setRandomBackground();\n  },\n};\n</script>\n\n/* src/components/LoginPage.vue */\n\n/* src/components/LoginPage.vue */\n\n<style scoped>\n.login-container {\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-image 0.5s ease-in-out; /* Smooth transition when changing images */\n}\n\n.overlay {\n  background-color: rgba(0, 0, 0, 0.5); /* Dark overlay for better contrast */\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-card {\n  background-color: rgba(255, 255, 255, 0.9);\n  padding: 40px;\n  border-radius: 10px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\n  max-width: 400px;\n  width: 90%;\n  text-align: center;\n  animation: fadeIn 1s ease-in-out;\n}\n\n.login-card h2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.form-group {\n  margin-bottom: 15px;\n  text-align: left;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #555;\n  font-weight: 600;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.login-button {\n  width: 100%;\n  padding: 12px;\n  background-color: #6c63ff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.login-button:hover {\n  background-color: #574b90;\n}\n\n.login-button:active {\n  background-color: #3f3070;\n}\n\n.login-card p {\n  margin-top: 15px;\n  color: #666;\n}\n\n.login-card a {\n  color: #6c63ff;\n  text-decoration: none;\n  font-weight: 600;\n}\n\n.login-card a:hover {\n  text-decoration: underline;\n}\n\n/* Fade-in Animation */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Responsive Adjustments */\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n}\n</style>\n"],"mappings":";AA0BA,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,WAAU,GAAI,CAClB,sDAAsD,EACtD,uDAAuD,EACvD,6DAA6D,EAC7D,8DAA8D,EAC9D,+CAA+C,EAC/C,8CAA8C,EAC9C,8CAA8C,EAC9C,kDAAkD,EAClD,kEAAkE,EAClE,+CAA+C,EAC/C,0CAA0C,EAC1C,6DAA6D,EAC7D,6DAA6D,EAC7D,sDAAsD,EACtD,4CAA4C,EAC5C,sDAAsD,CACvD;AAED,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,sCAAsC,EAAE;UACxEN,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAMM,KAAI,GAAIF,QAAQ,CAACN,IAAI,CAACQ,KAAK;QACjC,MAAMC,QAAO,GAAIH,QAAQ,CAACN,IAAI,CAACS,QAAQ;QAEvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,KAAK,CAAC;;QAE5B;QACAI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;QACpCI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAAC;;QAE1C;QACA,IAAI,CAACK,KAAK,CAACN,KAAI,GAAIA,KAAK,EAAE;QAC1B,IAAI,CAACM,KAAK,CAACL,QAAO,GAAIA,QAAQ,EAAE;;QAEhCM,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;MACnC,EAAE,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCH,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF,CAAC;IACDI,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIzB,WAAW,CAAC0B,MAAM,CAAC;MAClE,IAAI,CAACrB,eAAc,GAAIL,WAAW,CAACsB,WAAW,CAAC;IACjD;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,mBAAmB,CAAC,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}