{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"nav\", null, [_createCommentVNode(\" Navigation Links \"), _ctx.isLoggedIn ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"Welcome, \" + _toDisplayString(_ctx.username) + \"!\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 1,\n    to: \"/events\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Events\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _ctx.isLoggedIn ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.logout && _ctx.logout(...args))\n  }, \"Logout\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Logout Button \"), _createCommentVNode(\" Show login/register links if the user is not logged in \"), !_ctx.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 3,\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Sign In\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Routed components will be displayed here \"), _createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_ctx","isLoggedIn","_hoisted_2","_toDisplayString","username","_createBlock","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","onClick","args","logout","_createVNode","_component_router_view"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <!-- Navigation Links -->\n      <span v-if=\"isLoggedIn\">Welcome, {{ username }}!</span>      \n      <router-link v-if=\"isLoggedIn\" to=\"/events\">Events</router-link>\n      <button v-if=\"isLoggedIn\" @click=\"logout\">Logout</button> <!-- Logout Button -->\n      <!-- Show login/register links if the user is not logged in -->\n      <router-link v-if=\"!isLoggedIn\" to=\"/login\">Sign In</router-link>\n    </nav>\n    \n    <!-- Routed components will be displayed here -->\n    <router-view></router-view>\n  </div> \n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: '', // Make username reactive by setting it empty initially\n    };\n  },\n  computed: {\n    // Check if the user is logged in by checking the presence of the token\n    isLoggedIn() {\n      console.log(\"localStorage.getItem('token\"));\n      return !!localStorage.getItem('token');\n    }\n  },\n  methods: {\n    // Logout method to clear token and redirect to login\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username'); // Clear stored username\n      this.username = ''; // Reset username\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    },\n    updateUsername() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Decode the token and set the username from the payload\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          this.username = payload.username;\n        } catch (error) {\n          console.error('Error decoding token:', error);\n        }\n      }\n    }\n  },\n  watch: {\n    // Watch for changes in isLoggedIn and update the username accordingly\n    isLoggedIn(newValue) {\n      if (newValue) {\n        this.updateUsername();\n      } else {\n        this.username = ''; // Clear username if logged out\n      }\n    }\n  },\n  created() {\n    if (this.isLoggedIn) {\n      this.updateUsername(); // Fetch username when the app is created\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;;;;uBACEC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,mBAAA,CAOM,cANJC,mBAAA,sBAAyB,EACbC,IAAA,CAAAC,UAAU,I,cAAtBL,mBAAA,CAAuD,QAJ7DM,UAAA,EAI8B,WAAS,GAAAC,gBAAA,CAAGH,IAAA,CAAAI,QAAQ,IAAG,GAAC,mBAJtDL,mBAAA,gBAKyBC,IAAA,CAAAC,UAAU,I,cAA7BI,YAAA,CAAgEC,sBAAA;IALtEX,GAAA;IAKqCY,EAAE,EAAC;;IALxCC,OAAA,EAAAC,QAAA,CAKkD,MAAMC,MAAA,QAAAA,MAAA,OALxDC,gBAAA,CAKkD,QAAM,E;IALxDC,CAAA;QAAAb,mBAAA,gBAMoBC,IAAA,CAAAC,UAAU,I,cAAxBL,mBAAA,CAAyD;IAN/DD,GAAA;IAMiCkB,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEd,IAAA,CAAAe,MAAA,IAAAf,IAAA,CAAAe,MAAA,IAAAD,IAAA,CAAM;KAAE,QAAM,KANtDf,mBAAA,gBAMgEA,mBAAA,mBAAsB,EAChFA,mBAAA,4DAA+D,E,CAC3CC,IAAA,CAAAC,UAAU,I,cAA9BI,YAAA,CAAiEC,sBAAA;IARvEX,GAAA;IAQsCY,EAAE,EAAC;;IARzCC,OAAA,EAAAC,QAAA,CAQkD,MAAOC,MAAA,QAAAA,MAAA,OARzDC,gBAAA,CAQkD,SAAO,E;IARzDC,CAAA;QAAAb,mBAAA,e,GAWIA,mBAAA,8CAAiD,EACjDiB,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}