{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n\n// For testing, let's use a single image path first\nconst testImage = '/assets/events/pexels-pixabay-433452.jpg';\nconst eventImages = ['/assets/events/pexels-bertellifotografia-2608517.jpg', '/assets/events/pexels-bertellifotografia-29406512.jpg', '/assets/events/pexels-ezequiel-alfonso-3234743-29347735.jpg', '/assets/events/pexels-franco-monsalvo-252430633-29356373.jpg', '/assets/events/pexels-icsa-833425-1709003.jpg', '/assets/events/pexels-israyosoy-29436830.jpg', '/assets/events/pexels-israyosoy-29436916.jpg', '/assets/events/pexels-jonathanborba-29382709.jpg', '/assets/events/pexels-juan-felipe-ramirez-312591454-29361381.jpg', '/assets/events/pexels-osvaldosam-29367552.jpg', '/assets/events/pexels-pixabay-433452.jpg', '/assets/events/pexels-sandra-nanteza-532613123-29370058.jpg', '/assets/events/pexels-sandra-nanteza-532613123-29370382.jpg', '/assets/events/pexels-srivathsa-3760743-29345538.jpg', '/assets/events/pexels-zhuhehuai-716276.jpg', '/assets/events/photo-1492684223066-81342ee5ff30.jpeg'];\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      rememberMe: false,\n      backgroundImage: null,\n      isLoading: false,\n      emailError: false,\n      passwordError: false,\n      imageLoaded: false\n    };\n  },\n  computed: {\n    containerStyle() {\n      if (!this.imageLoaded) return {};\n      return {\n        backgroundImage: this.backgroundImage ? `url(${this.backgroundImage})` : 'none',\n        backgroundColor: '#f0f0f0' // Fallback color while image loads\n      };\n    }\n  },\n  methods: {\n    async login() {\n      this.isLoading = true;\n      // Reset error states\n      this.emailError = false;\n      this.passwordError = false;\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        const token = response.data.token;\n        const username = response.data.username;\n        console.log('Token:', token);\n\n        // Store token and username in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n\n        // Handle 'Remember Me' functionality\n        if (this.rememberMe) {\n          localStorage.setItem('rememberMe', true);\n        } else {\n          localStorage.removeItem('rememberMe');\n        }\n\n        // Update Vue's reactive `token` and `username` data\n        this.$root.token = token; // Ensure Vue's reactivity kicks in\n        this.$root.username = username; // Update username reactively\n\n        alert('Login successful!');\n        this.$router.push('/dashboard'); // Redirect to dashboard or home page\n      } catch (error) {\n        console.error('Login error:', error);\n        if (error.response && error.response.status === 401) {\n          this.passwordError = true;\n          alert('Incorrect email or password.');\n        } else {\n          alert('An unexpected error occurred. Please try again.');\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    spreloadImage(imagePath) {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          this.backgroundImage = imagePath;\n          this.imageLoaded = true;\n          resolve();\n        };\n        img.onerror = () => {\n          console.error(`Failed to load image: ${imagePath}`);\n          reject(new Error(`Failed to load image: ${imagePath}`));\n        };\n        img.src = imagePath;\n      });\n    },\n    async setRandomBackground() {\n      try {\n        // For testing, use the single test image\n        // const randomIndex = Math.floor(Math.random() * eventImages.length);\n        // const selectedImage = eventImages[randomIndex];\n        const selectedImage = testImage; // Use test image for debugging\n\n        console.log('Loading image:', selectedImage);\n        await this.preloadImage(selectedImage);\n        console.log('Image loaded successfully');\n      } catch (error) {\n        console.error('Error setting background:', error);\n        // Try another image if the first one fails\n        this.tryFallbackImage();\n      }\n    },\n    async tryFallbackImage() {\n      // Try each image in the array until one loads successfully\n      for (const image of eventImages) {\n        try {\n          await this.preloadImage(image);\n          break; // Exit loop if image loads successfully\n        } catch (error) {\n          console.error(`Fallback image failed: ${image}`);\n          continue;\n        }\n      }\n    }\n  },\n  async created() {\n    console.log('Component created');\n    await this.setRandomBackground();\n  }\n};","map":{"version":3,"names":["axios","testImage","eventImages","name","data","email","password","rememberMe","backgroundImage","isLoading","emailError","passwordError","imageLoaded","computed","containerStyle","backgroundColor","methods","login","response","post","token","username","console","log","localStorage","setItem","removeItem","$root","alert","$router","push","error","status","spreloadImage","imagePath","Promise","resolve","reject","img","Image","onload","onerror","Error","src","setRandomBackground","selectedImage","preloadImage","tryFallbackImage","image","created"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\" :style=\"containerStyle\" ref=\"container\">\n    <div class=\"overlay\">\n      <div class=\"login-card\">\n        <h2>Sign In</h2>\n        <form @submit.prevent=\"login\">\n          <div class=\"form-group\" :class=\"{ 'has-error': emailError }\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" v-model=\"email\" id=\"email\" required />\n            <span v-if=\"emailError\" class=\"error-message\">Invalid email address.</span>\n          </div>\n          <div class=\"form-group\" :class=\"{ 'has-error': passwordError }\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" v-model=\"password\" id=\"password\" required />\n            <span v-if=\"passwordError\" class=\"error-message\">Incorrect password.</span>\n          </div>\n\n          <button type=\"submit\" class=\"login-button\" :disabled=\"isLoading\">\n            <span v-if=\"!isLoading\">Login</span>\n            <span v-else class=\"spinner\"></span>\n          </button>\n        </form>\n        <p>Don't have an account? <router-link to=\"/register\">Sign Up</router-link></p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// For testing, let's use a single image path first\nconst testImage = '/assets/events/pexels-pixabay-433452.jpg';\n\nconst eventImages = [\n  '/assets/events/pexels-bertellifotografia-2608517.jpg',\n  '/assets/events/pexels-bertellifotografia-29406512.jpg',\n  '/assets/events/pexels-ezequiel-alfonso-3234743-29347735.jpg',\n  '/assets/events/pexels-franco-monsalvo-252430633-29356373.jpg',\n  '/assets/events/pexels-icsa-833425-1709003.jpg',\n  '/assets/events/pexels-israyosoy-29436830.jpg',\n  '/assets/events/pexels-israyosoy-29436916.jpg',\n  '/assets/events/pexels-jonathanborba-29382709.jpg',\n  '/assets/events/pexels-juan-felipe-ramirez-312591454-29361381.jpg',\n  '/assets/events/pexels-osvaldosam-29367552.jpg',\n  '/assets/events/pexels-pixabay-433452.jpg',\n  '/assets/events/pexels-sandra-nanteza-532613123-29370058.jpg',\n  '/assets/events/pexels-sandra-nanteza-532613123-29370382.jpg',\n  '/assets/events/pexels-srivathsa-3760743-29345538.jpg',\n  '/assets/events/pexels-zhuhehuai-716276.jpg',\n  '/assets/events/photo-1492684223066-81342ee5ff30.jpeg',\n];\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      rememberMe: false,\n      backgroundImage: null,\n      isLoading: false,\n      emailError: false,\n      passwordError: false,\n      imageLoaded: false,\n    };\n  },\n  computed: {\n    containerStyle() {\n      if (!this.imageLoaded) return {};\n      \n      return {\n        backgroundImage: this.backgroundImage ? `url(${this.backgroundImage})` : 'none',\n        backgroundColor: '#f0f0f0', // Fallback color while image loads\n      };\n    }\n  },\n  methods: {\n    async login() {\n      this.isLoading = true;\n      // Reset error states\n      this.emailError = false;\n      this.passwordError = false;\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password,\n        });\n\n        const token = response.data.token;\n        const username = response.data.username;\n\n        console.log('Token:', token);\n\n        // Store token and username in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n\n        // Handle 'Remember Me' functionality\n        if (this.rememberMe) {\n          localStorage.setItem('rememberMe', true);\n        } else {\n          localStorage.removeItem('rememberMe');\n        }\n\n        // Update Vue's reactive `token` and `username` data\n        this.$root.token = token; // Ensure Vue's reactivity kicks in\n        this.$root.username = username; // Update username reactively\n\n        alert('Login successful!');\n        this.$router.push('/dashboard'); // Redirect to dashboard or home page\n      } catch (error) {\n        console.error('Login error:', error);\n        if (error.response && error.response.status === 401) {\n          this.passwordError = true;\n          alert('Incorrect email or password.');\n        } else {\n          alert('An unexpected error occurred. Please try again.');\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    spreloadImage(imagePath) {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          this.backgroundImage = imagePath;\n          this.imageLoaded = true;\n          resolve();\n        };\n        img.onerror = () => {\n          console.error(`Failed to load image: ${imagePath}`);\n          reject(new Error(`Failed to load image: ${imagePath}`));\n        };\n        img.src = imagePath;\n      });\n    },\n    async setRandomBackground() {\n      try {\n        // For testing, use the single test image\n        // const randomIndex = Math.floor(Math.random() * eventImages.length);\n        // const selectedImage = eventImages[randomIndex];\n        const selectedImage = testImage; // Use test image for debugging\n        \n        console.log('Loading image:', selectedImage);\n        await this.preloadImage(selectedImage);\n        console.log('Image loaded successfully');\n      } catch (error) {\n        console.error('Error setting background:', error);\n        // Try another image if the first one fails\n        this.tryFallbackImage();\n      }\n    },\n    async tryFallbackImage() {\n      // Try each image in the array until one loads successfully\n      for (const image of eventImages) {\n        try {\n          await this.preloadImage(image);\n          break; // Exit loop if image loads successfully\n        } catch (error) {\n          console.error(`Fallback image failed: ${image}`);\n          continue;\n        }\n      }\n    }\n  },\n  async created() {\n    console.log('Component created');\n    await this.setRandomBackground();\n  }\n};\n</script>\n\n\n/* src/components/LoginPage.vue */\n/* src/components/LoginPage.vue */\n\n<style scoped>\n.login-container {\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-image 0.5s ease-in-out;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(to bottom right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.3));\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-card {\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 40px;\n  border-radius: 10px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\n  max-width: 400px;\n  width: 90%;\n  text-align: center;\n  animation: fadeIn 1s ease-in-out;\n  color: #333;\n  position: relative;\n  z-index: 2;\n}\n\n.login-card h2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.form-group {\n  margin-bottom: 15px;\n  text-align: left;\n}\n\n.form-group.has-error input {\n  border-color: #e74c3c;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #555;\n  font-weight: 600;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  transition: border-color 0.3s ease;\n}\n\n.form-group input:hover,\n.form-group input:focus {\n  border-color: #6c63ff;\n  box-shadow: 0 0 5px rgba(108, 99, 255, 0.5);\n}\n\n.login-button {\n  width: 100%;\n  padding: 12px;\n  background-color: #6c63ff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.login-button:hover {\n  background-color: #574b90;\n}\n\n.login-button:active {\n  background-color: #3f3070;\n}\n\n.login-button:disabled {\n  background-color: #a9a9a9;\n  cursor: not-allowed;\n}\n\n.spinner {\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-left-color: #ffffff;\n  height: 16px;\n  width: 16px;\n  border-radius: 50%;\n  display: inline-block;\n  animation: spin 1s linear infinite;\n  margin: 0 auto;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.login-card p {\n  margin-top: 15px;\n  color: #666;\n}\n\n.login-card a {\n  color: #6c63ff;\n  text-decoration: none;\n  font-weight: 600;\n}\n\n.login-card a:hover {\n  text-decoration: underline;\n}\n\n/* Fade-in Animation */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Logo Styling */\n.logo {\n  width: 100px;\n  margin-bottom: 20px;\n}\n\n/* Responsive Adjustments */\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}