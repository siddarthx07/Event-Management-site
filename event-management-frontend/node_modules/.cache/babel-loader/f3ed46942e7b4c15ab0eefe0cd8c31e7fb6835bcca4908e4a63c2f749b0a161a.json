{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"nav\", null, [_createCommentVNode(\" Navigation Links \"), $options.isLoggedIn ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"Welcome, \" + _toDisplayString($data.username) + \"!\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 1,\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Events\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $options.isLoggedIn ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"Logout\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Logout Button \"), _createCommentVNode(\" Show login/register links if the user is not logged in \"), !$options.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 3,\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Sign In\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), !$options.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 4,\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"Sign Up\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Routed components will be displayed here \"), _createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$options","isLoggedIn","_hoisted_2","_toDisplayString","$data","username","_createBlock","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","onClick","args","logout","_createVNode","_component_router_view"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <!-- Navigation Links -->\n      <span v-if=\"isLoggedIn\">Welcome, {{ username }}!</span>      \n      <router-link v-if=\"isLoggedIn\" to=\"/\">Events</router-link>\n      <button v-if=\"isLoggedIn\" @click=\"logout\">Logout</button> <!-- Logout Button -->\n      <!-- Show login/register links if the user is not logged in -->\n      <router-link v-if=\"!isLoggedIn\" to=\"/login\">Sign In</router-link>\n      <router-link v-if=\"!isLoggedIn\" to=\"/register\">Sign Up</router-link>\n\n    </nav>\n    \n    <!-- Routed components will be displayed here -->\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: localStorage.getItem('username') || '',\n      token: localStorage.getItem('token') || '' // Store token in reactive data\n    };\n  },\n  computed: {\n    // Check if the user is logged in by checking the presence of the token\n    isLoggedIn() {\n      return !!this.token;  // Convert token presence to boolean\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username'); // Clear stored username\n      this.token = '';  // Clear token in data\n      this.username = '';  // Clear username in data\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    \n    // Check if the token exists and has the correct format\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1])); // Attempt to decode the payload\n        console.log('Token Payload:', payload);\n        localStorage.setItem('username', payload.username);\n        localStorage.setItem('role', payload.role);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        // If the token is malformed, remove it from localStorage\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('role');\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;;;;uBACEC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CASM,cARJC,mBAAA,sBAAyB,EACbC,QAAA,CAAAC,UAAU,I,cAAtBL,mBAAA,CAAuD,QAJ7DM,UAAA,EAI8B,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,IAAG,GAAC,mBAJtDN,mBAAA,gBAKyBC,QAAA,CAAAC,UAAU,I,cAA7BK,YAAA,CAA0DC,sBAAA;IALhEZ,GAAA;IAKqCa,EAAE,EAAC;;IALxCC,OAAA,EAAAC,QAAA,CAK4C,MAAMC,MAAA,QAAAA,MAAA,OALlDC,gBAAA,CAK4C,QAAM,E;IALlDC,CAAA;QAAAd,mBAAA,gBAMoBC,QAAA,CAAAC,UAAU,I,cAAxBL,mBAAA,CAAyD;IAN/DD,GAAA;IAMiCmB,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEf,QAAA,CAAAgB,MAAA,IAAAhB,QAAA,CAAAgB,MAAA,IAAAD,IAAA,CAAM;KAAE,QAAM,KANtDhB,mBAAA,gBAMgEA,mBAAA,mBAAsB,EAChFA,mBAAA,4DAA+D,E,CAC3CC,QAAA,CAAAC,UAAU,I,cAA9BK,YAAA,CAAiEC,sBAAA;IARvEZ,GAAA;IAQsCa,EAAE,EAAC;;IARzCC,OAAA,EAAAC,QAAA,CAQkD,MAAOC,MAAA,QAAAA,MAAA,OARzDC,gBAAA,CAQkD,SAAO,E;IARzDC,CAAA;QAAAd,mBAAA,gB,CAS0BC,QAAA,CAAAC,UAAU,I,cAA9BK,YAAA,CAAoEC,sBAAA;IAT1EZ,GAAA;IASsCa,EAAE,EAAC;;IATzCC,OAAA,EAAAC,QAAA,CASqD,MAAOC,MAAA,QAAAA,MAAA,OAT5DC,gBAAA,CASqD,SAAO,E;IAT5DC,CAAA;QAAAd,mBAAA,e,GAaIA,mBAAA,8CAAiD,EACjDkB,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}