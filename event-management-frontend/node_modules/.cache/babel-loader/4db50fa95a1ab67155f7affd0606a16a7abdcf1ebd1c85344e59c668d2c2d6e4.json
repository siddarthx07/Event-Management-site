{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      event: null,\n      formattedDate: '',\n      // Store the correctly formatted date\n      errorMessage: ''\n    };\n  },\n  created() {\n    axios.get(`http://localhost:3000/api/events/${this.id}`).then(response => {\n      this.event = response.data;\n      this.formattedDate = this.formatDate(this.event.date); // Format the date correctly\n    }).catch(error => {\n      console.error('Error fetching event data:', error);\n      this.errorMessage = 'Failed to load event data.';\n    });\n  },\n  methods: {\n    // Format the date to \"yyyy-MM-dd\" format\n    formatDate(isoString) {\n      const date = new Date(isoString);\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Add leading zero\n      const day = date.getDate().toString().padStart(2, '0'); // Add leading zero\n      return `${year}-${month}-${day}`; // Return the formatted date\n    },\n    updateEvent() {\n      // Update the event's date before sending the data to the server\n      this.event.date = this.formattedDate;\n      axios.put(`http://localhost:3000/api/events/${this.id}`, this.event).then(() => {\n        alert('Event updated successfully!');\n        this.$router.push('/'); // Redirect to the event list after a successful update\n      }).catch(error => {\n        console.error('Error updating event:', error);\n        this.errorMessage = 'Failed to update the event.';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","event","formattedDate","errorMessage","created","get","id","then","response","formatDate","date","catch","error","console","methods","isoString","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","updateEvent","put","alert","$router","push"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EditEvent.vue"],"sourcesContent":["<template>\n  <div v-if=\"event\">\n    <h2>Edit Event: {{ event.name }}</h2>\n    <form @submit.prevent=\"updateEvent\">\n      <div>\n        <label for=\"name\">Event Name:</label>\n        <input type=\"text\" v-model=\"event.name\" id=\"name\" required />\n      </div>\n\n      <div>\n        <label for=\"description\">Description:</label>\n        <textarea v-model=\"event.description\" id=\"description\"></textarea>\n      </div>\n\n      <div>\n        <label for=\"date\">Date:</label>\n        <!-- Format the date correctly for the date input field -->\n        <input type=\"date\" v-model=\"formattedDate\" id=\"date\" required />\n      </div>\n\n      <button type=\"submit\">Update Event</button>\n    </form>\n  </div>\n  <div v-else>\n    <p>Loading event data...</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      event: null,\n      formattedDate: '', // Store the correctly formatted date\n      errorMessage: ''\n    };\n  },\n  created() {\n    axios.get(`http://localhost:3000/api/events/${this.id}`)\n      .then(response => {\n        this.event = response.data;\n        this.formattedDate = this.formatDate(this.event.date); // Format the date correctly\n      })\n      .catch(error => {\n        console.error('Error fetching event data:', error);\n        this.errorMessage = 'Failed to load event data.';\n      });\n  },\n  methods: {\n    // Format the date to \"yyyy-MM-dd\" format\n    formatDate(isoString) {\n      const date = new Date(isoString);\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Add leading zero\n      const day = date.getDate().toString().padStart(2, '0'); // Add leading zero\n      return `${year}-${month}-${day}`; // Return the formatted date\n    },\n    updateEvent() {\n      // Update the event's date before sending the data to the server\n      this.event.date = this.formattedDate;\n\n      axios.put(`http://localhost:3000/api/events/${this.id}`, this.event)\n        .then(() => {\n          alert('Event updated successfully!');\n          this.$router.push('/'); // Redirect to the event list after a successful update\n        })\n        .catch(error => {\n          console.error('Error updating event:', error);\n          this.errorMessage = 'Failed to update the event.';\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Your styles here */\n</style>\n"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,EAAE;MAAE;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRN,KAAK,CAACO,GAAG,CAAC,oCAAoC,IAAI,CAACC,EAAE,EAAE,EACpDC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACP,KAAI,GAAIO,QAAQ,CAACR,IAAI;MAC1B,IAAI,CAACE,aAAY,GAAI,IAAI,CAACO,UAAU,CAAC,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC,EAAE;IACzD,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAI,CAACT,YAAW,GAAI,4BAA4B;IAClD,CAAC,CAAC;EACN,CAAC;EACDW,OAAO,EAAE;IACP;IACAL,UAAUA,CAACM,SAAS,EAAE;MACpB,MAAML,IAAG,GAAI,IAAIM,IAAI,CAACD,SAAS,CAAC;MAChC,MAAME,IAAG,GAAIP,IAAI,CAACQ,WAAW,CAAC,CAAC;MAC/B,MAAMC,KAAI,GAAI,CAACT,IAAI,CAACU,QAAQ,CAAC,IAAI,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACjE,MAAMC,GAAE,GAAIb,IAAI,CAACc,OAAO,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACxD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE,EAAE;IACpC,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACxB,KAAK,CAACS,IAAG,GAAI,IAAI,CAACR,aAAa;MAEpCJ,KAAK,CAAC4B,GAAG,CAAC,oCAAoC,IAAI,CAACpB,EAAE,EAAE,EAAE,IAAI,CAACL,KAAK,EAChEM,IAAI,CAAC,MAAM;QACVoB,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,CAAC,EACAlB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,IAAI,CAACT,YAAW,GAAI,6BAA6B;MACnD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}