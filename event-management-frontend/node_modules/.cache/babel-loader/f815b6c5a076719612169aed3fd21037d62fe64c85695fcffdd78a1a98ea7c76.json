{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      backgroundImage: ''\n    };\n  },\n  created() {\n    this.fetchRandomImage();\n  },\n  methods: {\n    async fetchRandomImage() {\n      try {\n        const response = await axios.get('https://source.unsplash.com/random/1600x900');\n        this.backgroundImage = response.request.responseURL;\n      } catch (error) {\n        console.error('Error fetching random image:', error);\n      }\n    },\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n        const token = response.data.token;\n        const username = response.data.username;\n        console.log('Token:', token);\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n        alert('Login successful!');\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed, please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","backgroundImage","created","fetchRandomImage","methods","response","get","request","responseURL","error","console","login","post","token","username","log","localStorage","setItem","$root","alert","$router","push"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div :style=\"{ backgroundImage: `url(${backgroundImage})` }\">\n    <h2>Sign In</h2>\n    <form @submit.prevent=\"login\">\n      <div>\n        <label for=\"email\">Email</label>\n        <input type=\"email\" v-model=\"email\" id=\"email\" required />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\" v-model=\"password\" id=\"password\" required />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n    <p>Don't have an account? <router-link to=\"/register\">Sign Up</router-link></p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      backgroundImage: ''\n    };\n  },\n  created() {\n    this.fetchRandomImage();\n  },\n  methods: {\n    async fetchRandomImage() {\n      try {\n        const response = await axios.get('https://source.unsplash.com/random/1600x900');\n        this.backgroundImage = response.request.responseURL;\n      } catch (error) {\n        console.error('Error fetching random image:', error);\n      }\n    },\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/login', {\n          email: this.email,\n          password: this.password\n        });\n\n        const token = response.data.token;\n        const username = response.data.username;\n        console.log('Token:', token);\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        this.$root.token = token;\n        this.$root.username = username;\n        alert('Login successful!');\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed, please try again.');\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    color: white;\n    font-family: Arial, sans-serif;\n  }\n\n  form {\n    background: rgba(0, 0, 0, 0.7);\n    padding: 20px;\n    border-radius: 10px;\n    width: 300px;\n    text-align: center;\n  }\n\n  label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n  }\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 15px;\n    border: none;\n    border-radius: 5px;\n  }\n\n  button {\n    width: 100%;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #45a049;\n  }\n\n  p {\n    margin-top: 15px;\n  }\n\n  a {\n    color: #4CAF50;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n</style>"],"mappings":";AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,6CAA6C,CAAC;QAC/E,IAAI,CAACL,eAAc,GAAII,QAAQ,CAACE,OAAO,CAACC,WAAW;MACrD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACD,MAAME,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMN,QAAO,GAAI,MAAMT,KAAK,CAACgB,IAAI,CAAC,sCAAsC,EAAE;UACxEb,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAMa,KAAI,GAAIR,QAAQ,CAACP,IAAI,CAACe,KAAK;QACjC,MAAMC,QAAO,GAAIT,QAAQ,CAACP,IAAI,CAACgB,QAAQ;QACvCJ,OAAO,CAACK,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;QAC5BG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;QACpCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;QAC1C,IAAI,CAACI,KAAK,CAACL,KAAI,GAAIA,KAAK;QACxB,IAAI,CAACK,KAAK,CAACJ,QAAO,GAAIA,QAAQ;QAC9BK,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCU,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}