{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      event: {\n        name: '',\n        description: '',\n        date: ''\n      },\n      image: null // Add a property to store the selected image\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.image = event.target.files[0]; // Store the selected file\n    },\n    createEvent() {\n      // Create a FormData object to send form data as multipart/form-data\n      const formData = new FormData();\n      formData.append('name', this.event.name);\n      formData.append('description', this.event.description);\n      formData.append('date', this.event.date);\n      if (this.image) {\n        formData.append('image', this.image); // Append the image file\n      }\n      axios.post('http://localhost:3000/api/events', formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data' // Set the content type to multipart/form-data\n        }\n      }).then(response => {\n        console.log('Event created:', response.data);\n        this.$emit('event-created', response.data); // Emit an event to notify the parent component\n        this.resetForm(); // Clear the form after event creation\n      }).catch(error => {\n        console.error('Error creating event:', error);\n        alert('Failed to create event. Please make sure you are logged in.');\n      });\n    },\n    resetForm() {\n      this.event = {\n        name: '',\n        description: '',\n        date: ''\n      }; // Reset form data\n      this.image = null; // Reset the image field\n    }\n  }\n};","map":{"version":3,"names":["axios","data","event","name","description","date","image","methods","handleFileUpload","target","files","createEvent","formData","FormData","append","post","headers","Authorization","localStorage","getItem","then","response","console","log","$emit","resetForm","catch","error","alert"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/CreateEvent.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Create a New Event</h2>\n    <form @submit.prevent=\"createEvent\">\n      <div>\n        <label for=\"name\">Event Name:</label>\n        <input type=\"text\" v-model=\"event.name\" id=\"name\" required />\n      </div>\n\n      <div>\n        <label for=\"description\">Description:</label>\n        <textarea v-model=\"event.description\" id=\"description\"></textarea>\n      </div>\n\n      <div>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" v-model=\"event.date\" id=\"date\" required />\n      </div>\n\n      <div>\n        <label for=\"image\">Thumbnail Image:</label>\n        <input type=\"file\" @change=\"handleFileUpload\" id=\"image\" />\n      </div>\n      \n      \n\n      <button type=\"submit\">Create Event</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      event: {\n        name: '',\n        description: '',\n        date: ''\n      },\n      image: null  // Add a property to store the selected image\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.image = event.target.files[0];  // Store the selected file\n    },\n    createEvent() {\n      // Create a FormData object to send form data as multipart/form-data\n      const formData = new FormData();\n      formData.append('name', this.event.name);\n      formData.append('description', this.event.description);\n      formData.append('date', this.event.date);\n      if (this.image) {\n        formData.append('image', this.image);  // Append the image file\n      }\n\n      axios.post('http://localhost:3000/api/events', formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data'  // Set the content type to multipart/form-data\n        }\n      })\n      .then(response => {\n        console.log('Event created:', response.data);\n        this.$emit('event-created', response.data); // Emit an event to notify the parent component\n        this.resetForm(); // Clear the form after event creation\n      })\n      .catch(error => {\n        console.error('Error creating event:', error);\n        alert('Failed to create event. Please make sure you are logged in.');\n      });\n    },\n    resetForm() {\n      this.event = { name: '', description: '', date: '' }; // Reset form data\n      this.image = null; // Reset the image field\n    }\n  }\n};\n</script>\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE,IAAG,CAAG;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACN,KAAK,EAAE;MACtB,IAAI,CAACI,KAAI,GAAIJ,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAG;IACvC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ;MACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACZ,KAAK,CAACC,IAAI,CAAC;MACxCS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACZ,KAAK,CAACE,WAAW,CAAC;MACtDQ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACZ,KAAK,CAACG,IAAI,CAAC;MACxC,IAAI,IAAI,CAACC,KAAK,EAAE;QACdM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,KAAK,CAAC,EAAG;MACzC;MAEAN,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAEH,QAAQ,EAAE;QACvDI,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACxD,cAAc,EAAE,qBAAoB,CAAG;QACzC;MACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACpB,IAAI,CAAC;QAC5C,IAAI,CAACuB,KAAK,CAAC,eAAe,EAAEH,QAAQ,CAACpB,IAAI,CAAC,EAAE;QAC5C,IAAI,CAACwB,SAAS,CAAC,CAAC,EAAE;MACpB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,KAAK,CAAC,6DAA6D,CAAC;MACtE,CAAC,CAAC;IACJ,CAAC;IACDH,SAASA,CAAA,EAAG;MACV,IAAI,CAACvB,KAAI,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,EAAE;MACtD,IAAI,CAACC,KAAI,GAAI,IAAI,EAAE;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}