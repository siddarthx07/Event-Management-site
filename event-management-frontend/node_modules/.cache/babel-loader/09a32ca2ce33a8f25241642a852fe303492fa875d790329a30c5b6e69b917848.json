{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        // Optionally, you can add client-side validation here\n\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n        console.log('Registration successful:', response.data);\n        alert('Registration successful! Redirecting to login...');\n        this.$router.push('/login'); // Redirect to login page after registration\n      } catch (error) {\n        console.error('Registration error:', error);\n        // Handle specific error messages based on backend response\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(`Registration failed: ${error.response.data.message}`);\n        } else {\n          alert('Registration failed, please try again.');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","email","password","methods","register","response","post","console","log","alert","$router","push","error","message"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Sign Up</h2>\n    <form @submit.prevent=\"register\" class=\"register-form\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          v-model=\"username\"\n          id=\"username\"\n          placeholder=\"Enter your username\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          v-model=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          id=\"password\"\n          placeholder=\"Create a password\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn\">Register</button>\n    </form>\n    <p class=\"login-link\">\n      Already have an account? <router-link to=\"/login\">Sign In</router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        // Optionally, you can add client-side validation here\n\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n\n        console.log('Registration successful:', response.data);\n\n        alert('Registration successful! Redirecting to login...');\n        this.$router.push('/login'); // Redirect to login page after registration\n      } catch (error) {\n        console.error('Registration error:', error);\n        // Handle specific error messages based on backend response\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(`Registration failed: ${error.response.data.message}`);\n        } else {\n          alert('Registration failed, please try again.');\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Overall container styling */\n.register-container {\n  position: relative;\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 40px 30px;\n  border-radius: 10px;\n  color: #ffffff;\n}\n\n.register-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url('/src/assets/events/pexels-bertellifotografia-2608517.jpg');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0; /* Adjust for transparency */\n  border-radius: 10px;\n  z-index: -1; /* Keep the background behind the content */\n}\n\n\n/* Title styling */\n.register-title {\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 28px;\n  color: #333333;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3); /* Optional for better contrast */\n}\n\n/* Form styling */\n.register-form .form-group {\n  margin-bottom: 20px;\n  background-size: cover;\n  background-position: center;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.register-form label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #ffffff; /* Adjust text color for better readability */\n}\n\n.register-form input {\n  width: 100%;\n  padding: 12px 15px;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n.register-form input:focus {\n  border-color: #007BFF;\n  outline: none;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.2);\n}\n\n/* Button styling */\n.btn {\n  width: 100%;\n  padding: 12px 0;\n  background-color: #007BFF;\n  border: none;\n  border-radius: 5px;\n  color: #ffffff;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n}\n\n/* Login link styling */\n.login-link {\n  text-align: center;\n  margin-top: 20px;\n  color: #ffffff; /* Adjust text color for better readability */\n  font-size: 14px;\n}\n\n.login-link a {\n  color: #ffffff;\n  text-decoration: none;\n  font-weight: 500;\n}\n\n.login-link a:hover {\n  text-decoration: underline;\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .register-container {\n    padding: 30px 20px;\n    margin: 60px auto;\n  }\n\n  .register-title {\n    font-size: 24px;\n  }\n\n  .btn {\n    font-size: 16px;\n  }\n}\n</style>\n"],"mappings":";AA2CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF;;QAEA,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,yCAAyC,EAAE;UAC3EN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEFK,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACN,IAAI,CAAC;QAEtDU,KAAK,CAAC,kDAAkD,CAAC;QACzD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;QACA,IAAIA,KAAK,CAACP,QAAO,IAAKO,KAAK,CAACP,QAAQ,CAACN,IAAG,IAAKa,KAAK,CAACP,QAAQ,CAACN,IAAI,CAACc,OAAO,EAAE;UACxEJ,KAAK,CAAC,wBAAwBG,KAAK,CAACP,QAAQ,CAACN,IAAI,CAACc,OAAO,EAAE,CAAC;QAC9D,OAAO;UACLJ,KAAK,CAAC,wCAAwC,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}