{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: localStorage.getItem('username') || '',\n      token: localStorage.getItem('token') || '' // Store token reactively\n    };\n  },\n  computed: {\n    // Check if the user is logged in by checking the presence of the token\n    isLoggedIn() {\n      return !!this.token; // Convert token presence to boolean\n    }\n  },\n  methods: {\n    logout() {\n      // Remove token and username from both localStorage and component state\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      this.token = ''; // Clear token in reactive data\n      this.username = ''; // Clear username in reactive data\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n\n    // Check if the token exists and handle it safely\n    if (token) {\n      try {\n        // Decode the JWT token payload (middle part)\n        const payload = JSON.parse(atob(token.split('.')[1]));\n\n        // Log the token payload for debugging\n        console.log('Token Payload:', payload);\n\n        // Update localStorage and reactive state with username and role\n        this.username = payload.username; // Set username reactively\n        localStorage.setItem('username', payload.username);\n        localStorage.setItem('role', payload.role);\n      } catch (error) {\n        // Handle token parsing error (possibly malformed token)\n        console.error('Error decoding token:', error);\n\n        // If there's an issue with the token, clear any related data\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('role');\n      }\n    }\n  },\n  watch: {\n    token(newToken) {\n      if (!newToken) {\n        // If token is cleared, ensure username is also cleared\n        this.username = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","localStorage","getItem","token","computed","isLoggedIn","methods","logout","removeItem","$router","push","alert","created","payload","JSON","parse","atob","split","console","log","setItem","role","error","watch","newToken"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <!-- Navigation Links -->\n      <span v-if=\"isLoggedIn\">Welcome, {{ username }}!</span>      \n      <router-link v-if=\"isLoggedIn\" to=\"/events\">Events</router-link>\n      <button v-if=\"isLoggedIn\" @click=\"logout\">Logout</button> <!-- Logout Button -->\n      <!-- Show login/register links if the user is not logged in -->\n      <router-link v-if=\"!isLoggedIn\" to=\"/login\">Sign In</router-link>\n    </nav>\n    \n    <!-- Routed components will be displayed here -->\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: localStorage.getItem('username') || '',\n      token: localStorage.getItem('token') || '' // Store token reactively\n    };\n  },\n  computed: {\n    // Check if the user is logged in by checking the presence of the token\n    isLoggedIn() {\n      return !!this.token;  // Convert token presence to boolean\n    }\n  },\n  methods: {\n    logout() {\n      // Remove token and username from both localStorage and component state\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      this.token = '';  // Clear token in reactive data\n      this.username = '';  // Clear username in reactive data\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    \n    // Check if the token exists and handle it safely\n    if (token) {\n      try {\n        // Decode the JWT token payload (middle part)\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        \n        // Log the token payload for debugging\n        console.log('Token Payload:', payload);\n\n        // Update localStorage and reactive state with username and role\n        this.username = payload.username;  // Set username reactively\n        localStorage.setItem('username', payload.username);\n        localStorage.setItem('role', payload.role);\n\n      } catch (error) {\n        // Handle token parsing error (possibly malformed token)\n        console.error('Error decoding token:', error);\n        \n        // If there's an issue with the token, clear any related data\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('role');\n      }\n    }\n  },\n  watch: {\n    token(newToken) {\n      if (!newToken) {\n        // If token is cleared, ensure username is also cleared\n        this.username = '';\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;AAiBA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,KAAK,EAAE;MAChDC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,KAAK,EAAC,CAAE;IAC7C,CAAC;EACH,CAAC;EACDE,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,CAAC,IAAI,CAACF,KAAK,EAAG;IACxB;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP;MACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;MACnCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MAC/B,IAAI,CAACL,KAAI,GAAI,EAAE,EAAG;MAClB,IAAI,CAACH,QAAO,GAAI,EAAE,EAAG;MACrB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC3BC,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMT,KAAI,GAAIF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA,IAAIC,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAMU,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAErD;QACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,OAAO,CAAC;;QAEtC;QACA,IAAI,CAACb,QAAO,GAAIa,OAAO,CAACb,QAAQ,EAAG;QACnCC,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAEP,OAAO,CAACb,QAAQ,CAAC;QAClDC,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEP,OAAO,CAACQ,IAAI,CAAC;MAE5C,EAAE,OAAOC,KAAK,EAAE;QACd;QACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;;QAE7C;QACArB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;QACnCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;EACF,CAAC;EACDe,KAAK,EAAE;IACLpB,KAAKA,CAACqB,QAAQ,EAAE;MACd,IAAI,CAACA,QAAQ,EAAE;QACb;QACA,IAAI,CAACxB,QAAO,GAAI,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}