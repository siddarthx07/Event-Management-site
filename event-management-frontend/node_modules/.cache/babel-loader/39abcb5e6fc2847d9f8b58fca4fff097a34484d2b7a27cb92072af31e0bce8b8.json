{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport EventList from './components/EventList.vue';\nimport EditEvent from './components/EditEvent.vue';\nimport Login from './components/Login.vue'; // Login component\nimport Register from './components/Register.vue'; // Register component\n\n// Define the routes\nconst routes = [{\n  path: '/register',\n  component: Register,\n  name: 'register'\n},\n// Registration route\n{\n  path: '/login',\n  component: Login,\n  name: 'login'\n},\n// Login route\n{\n  path: '/',\n  component: EventList\n},\n// Public route\n{\n  path: '/events/:id/edit',\n  component: EditEvent,\n  name: 'edit-event',\n  props: true,\n  meta: {\n    requiresAuth: true\n  } // Protected route\n}];\n\n// Create the router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard for authentication\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const token = localStorage.getItem('token'); // Check for token in localStorage\n    if (!token) {\n      // Redirect to login page if not authenticated\n      return next({\n        name: 'login',\n        query: {\n          redirect: to.fullPath\n        } // Preserve the original route for redirection after login\n      });\n    }\n  }\n  // Proceed to the route\n  next();\n});\n\n// Create the Vue app and mount it\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","createRouter","createWebHistory","EventList","EditEvent","Login","Register","routes","path","component","name","props","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem","query","redirect","fullPath","app","use","mount"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport EventList from './components/EventList.vue';\nimport EditEvent from './components/EditEvent.vue';\nimport Login from './components/Login.vue';  // Login component\nimport Register from './components/Register.vue'; // Register component\n\n// Define the routes\nconst routes = [\n    { path: '/register', component: Register, name: 'register' }, // Registration route\n    { path: '/login', component: Login, name: 'login' },  // Login route\n    { path: '/', component: EventList },  // Public route\n    { \n      path: '/events/:id/edit', \n      component: EditEvent, \n      name: 'edit-event', \n      props: true, \n      meta: { requiresAuth: true } // Protected route\n    }\n];\n\n// Create the router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard for authentication\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const token = localStorage.getItem('token');  // Check for token in localStorage\n    if (!token) {\n      // Redirect to login page if not authenticated\n      return next({\n        name: 'login', \n        query: { redirect: to.fullPath } // Preserve the original route for redirection after login\n      });\n    }\n  }\n  // Proceed to the route\n  next();\n});\n\n// Create the Vue app and mount it\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,wBAAwB,CAAC,CAAE;AAC7C,OAAOC,QAAQ,MAAM,2BAA2B,CAAC,CAAC;;AAElD;AACA,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEH,QAAQ;EAAEI,IAAI,EAAE;AAAW,CAAC;AAAE;AAC9D;EAAEF,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEJ,KAAK;EAAEK,IAAI,EAAE;AAAQ,CAAC;AAAG;AACtD;EAAEF,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEN;AAAU,CAAC;AAAG;AACtC;EACEK,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,CACJ;;AAED;AACA,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BK;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;IAC9C,IAAI,CAACF,KAAK,EAAE;MACV;MACA,OAAOJ,IAAI,CAAC;QACVT,IAAI,EAAE,OAAO;QACbgB,KAAK,EAAE;UAAEC,QAAQ,EAAEV,EAAE,CAACW;QAAS,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ;EACF;EACA;EACAT,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACA,MAAMU,GAAG,GAAG9B,SAAS,CAACC,GAAG,CAAC;AAC1B6B,GAAG,CAACC,GAAG,CAAChB,MAAM,CAAC;AACfe,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}