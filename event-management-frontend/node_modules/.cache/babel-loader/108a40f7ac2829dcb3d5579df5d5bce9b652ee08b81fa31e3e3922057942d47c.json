{"ast":null,"code":"import axios from 'axios';\nimport { ref, watch, onMounted } from 'vue';\nexport default {\n  name: 'EventListPublic',\n  props: {\n    filters: {\n      type: Object,\n      default: () => ({\n        search: '',\n        startDate: '',\n        endDate: ''\n      })\n    }\n  },\n  setup(props) {\n    const events = ref([]);\n    const eventList = ref(null);\n    const fetchEvents = () => {\n      const params = {\n        name: props.filters.search,\n        startDate: props.filters.startDate,\n        endDate: props.filters.endDate\n      };\n      axios.get('http://localhost:3000/api/events-public', {\n        // Assuming a public endpoint\n        params\n      }).then(response => {\n        events.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    };\n    watch(() => props.filters, () => {\n      fetchEvents();\n    }, {\n      deep: true,\n      immediate: true\n    });\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n    const scrollLeft = () => {\n      const container = eventList.value;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: -scrollAmount,\n        behavior: 'smooth'\n      });\n    };\n    const scrollRight = () => {\n      const container = eventList.value;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    };\n    onMounted(() => {\n      fetchEvents();\n    });\n    return {\n      events,\n      formatDate,\n      scrollLeft,\n      scrollRight,\n      eventList\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","watch","onMounted","name","props","filters","type","Object","default","search","startDate","endDate","setup","events","eventList","fetchEvents","params","get","then","response","value","data","catch","error","console","deep","immediate","formatDate","dateString","date","Date","toLocaleDateString","undefined","year","month","day","scrollLeft","container","scrollAmount","clientWidth","scrollBy","left","behavior","scrollRight"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventListPublic.vue"],"sourcesContent":["<!-- src/components/EventListPublic.vue -->\n\n<template>\n  <div class=\"container mt-4\">\n    <h2 class=\"text-center mb-4\">Event List</h2>\n\n    <!-- Navigation Buttons -->\n    <div class=\"navigation-buttons mb-3\">\n      <button \n        class=\"nav-button left-button\" \n        @click=\"scrollLeft\" \n        aria-label=\"Scroll Left\"\n      >\n        <!-- Left Arrow SVG Icon -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"nav-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n        </svg>\n      </button>\n      <button \n        class=\"nav-button right-button\" \n        @click=\"scrollRight\" \n        aria-label=\"Scroll Right\"\n      >\n        <!-- Right Arrow SVG Icon -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"nav-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" />\n        </svg>\n      </button>\n    </div>\n\n    <!-- Event List Container -->\n    <div \n      v-if=\"events.length\" \n      class=\"event-list-container\" \n      ref=\"eventList\"\n    >\n      <div \n        v-for=\"event in events\" \n        :key=\"event.id\" \n        class=\"card event-card\"\n      >\n        <img \n          :src=\"event.image ? `http://localhost:3000${event.image}` : 'http://localhost:3000/uploads/default-image.jpg'\" \n          alt=\"Event Image\" \n          class=\"card-img-top\"\n          loading=\"lazy\"\n        />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ event.name }}</h5>\n          <p class=\"card-text\"><strong>Date:</strong> {{ formatDate(event.date) }}</p>\n          <router-link \n            :to=\"{ name: 'event-details-public', params: { id: event.id } }\" \n            class=\"btn btn-primary mt-3\"\n          >\n            View Details\n          </router-link>\n        </div>\n      </div>\n    </div>\n\n    <!-- No Events Message -->\n    <div v-else class=\"text-center\">\n      <p>No events found.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, watch, onMounted } from 'vue';\n\nexport default {\n  name: 'EventListPublic',\n  props: {\n    filters: {\n      type: Object,\n      default: () => ({\n        search: '',\n        startDate: '',\n        endDate: ''\n      })\n    }\n  },\n  setup(props) {\n    const events = ref([]);\n    const eventList = ref(null);\n\n    const fetchEvents = () => {\n      const params = {\n        name: props.filters.search,\n        startDate: props.filters.startDate,\n        endDate: props.filters.endDate\n      };\n      axios.get('http://localhost:3000/api/events-public', { // Assuming a public endpoint\n        params\n      })\n      .then(response => {\n        events.value = response.data;\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    };\n\n    watch(() => props.filters, () => {\n      fetchEvents();\n    }, { deep: true, immediate: true });\n\n    const formatDate = (dateString) => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n\n    const scrollLeft = () => {\n      const container = eventList.value;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: -scrollAmount,\n        behavior: 'smooth'\n      });\n    };\n\n    const scrollRight = () => {\n      const container = eventList.value;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    };\n\n    onMounted(() => {\n      fetchEvents();\n    });\n\n    return {\n      events,\n      formatDate,\n      scrollLeft,\n      scrollRight,\n      eventList\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Global Box Sizing */\n* {\n  box-sizing: border-box;\n}\n\n/* Navigation Buttons Container */\n.navigation-buttons {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: relative;\n  margin-bottom: 15px;\n}\n\n/* Navigation Buttons */\n.nav-button {\n  width: 45px;\n  height: 45px;\n  margin-left: 12px;\n  border: none;\n  background-color: #6c63ff; /* Primary color */\n  color: #fff;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.nav-button:hover {\n  background-color: #574b90; /* Darker shade on hover */\n  transform: translateY(-3px);\n}\n\n.nav-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.5);\n}\n\n.nav-icon {\n  width: 20px;\n  height: 20px;\n}\n\n/* Disabled Navigation Buttons */\n.nav-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.nav-button:disabled .nav-icon {\n  fill: #666666;\n}\n\n/* Event List Container */\n.event-list-container {\n  display: flex;\n  overflow-x: auto;\n  gap: 20px; /* Spacing between cards */\n  padding: 10px;\n  scroll-behavior: smooth; /* Smooth scrolling */\n  position: relative;\n}\n\n.event-list-container::-webkit-scrollbar {\n  height: 8px; /* Custom scrollbar height */\n}\n\n.event-list-container::-webkit-scrollbar-thumb {\n  background-color: #888; /* Scrollbar color */\n  border-radius: 4px;\n}\n\n.event-list-container::-webkit-scrollbar-thumb:hover {\n  background-color: #555;\n}\n\n/* Event Card */\n.event-card {\n  flex: 0 0 auto; /* Prevent cards from shrinking */\n  width: 300px; /* Fixed width */\n  background-color: #fff; /* Background color for better contrast */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Ensure content doesn't overflow */\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.2s ease;\n}\n\n.event-card:hover {\n  transform: translateY(-5px); /* Slight lift on hover */\n}\n\n/* Card Image */\n.card-img-top {\n  width: 100%; /* Full width */\n  height: 180px; /* Fixed height */\n  object-fit: cover; /* Maintain aspect ratio and cover the area */\n}\n\n/* Card Body */\n.card-body {\n  padding: 15px;\n  flex-grow: 1; /* Ensure the body takes up remaining space */\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n/* Card Title */\n.card-title {\n  font-size: 1.25rem;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n/* Card Text */\n.card-text {\n  font-size: 0.95rem;\n  color: #666;\n  margin-bottom: 15px;\n}\n\n/* View Details Button */\n.btn-primary {\n  width: 100%; /* Full width button */\n}\n\n/* Responsive Adjustments */\n@media (max-width: 992px) {\n  .event-card {\n    width: 250px; /* Reduce card width on medium screens */\n  }\n\n  .card-img-top {\n    height: 160px; /* Adjust image height */\n  }\n}\n\n@media (max-width: 768px) {\n  .navigation-buttons {\n    justify-content: center;\n  }\n\n  .nav-button {\n    width: 40px;\n    height: 40px;\n    font-size: 1rem;\n  }\n\n  .event-card {\n    width: 220px; /* Further reduce card width on small screens */\n  }\n\n  .card-img-top {\n    height: 140px; /* Adjust image height */\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 35px;\n    height: 35px;\n    font-size: 0.9rem;\n  }\n\n  .event-card {\n    width: 200px; /* Minimal card width on very small screens */\n  }\n\n  .card-img-top {\n    height: 120px; /* Adjust image height */\n  }\n}\n</style>\n"],"mappings":"AAoEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AAE3C,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACX,CAAC;IACH;EACF,CAAC;EACDC,KAAKA,CAACR,KAAK,EAAE;IACX,MAAMS,MAAK,GAAIb,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMc,SAAQ,GAAId,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMe,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMC,MAAK,GAAI;QACbb,IAAI,EAAEC,KAAK,CAACC,OAAO,CAACI,MAAM;QAC1BC,SAAS,EAAEN,KAAK,CAACC,OAAO,CAACK,SAAS;QAClCC,OAAO,EAAEP,KAAK,CAACC,OAAO,CAACM;MACzB,CAAC;MACDZ,KAAK,CAACkB,GAAG,CAAC,yCAAyC,EAAE;QAAE;QACrDD;MACF,CAAC,EACAE,IAAI,CAACC,QAAO,IAAK;QAChBN,MAAM,CAACO,KAAI,GAAID,QAAQ,CAACE,IAAI;MAC9B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC;IAEDtB,KAAK,CAAC,MAAMG,KAAK,CAACC,OAAO,EAAE,MAAM;MAC/BU,WAAW,CAAC,CAAC;IACf,CAAC,EAAE;MAAEU,IAAI,EAAE,IAAI;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAEnC,MAAMC,UAAS,GAAKC,UAAU,IAAK;MACjC,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,kBAAkB,CAACC,SAAS,EAAE;QACxCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvB,MAAMC,SAAQ,GAAIvB,SAAS,CAACM,KAAK;MACjC,MAAMkB,YAAW,GAAID,SAAS,CAACE,WAAU,GAAI,GAAG,EAAE;MAClDF,SAAS,CAACG,QAAQ,CAAC;QACjBC,IAAI,EAAE,CAACH,YAAY;QACnBI,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMN,SAAQ,GAAIvB,SAAS,CAACM,KAAK;MACjC,MAAMkB,YAAW,GAAID,SAAS,CAACE,WAAU,GAAI,GAAG,EAAE;MAClDF,SAAS,CAACG,QAAQ,CAAC;QACjBC,IAAI,EAAEH,YAAY;QAClBI,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IAEDxC,SAAS,CAAC,MAAM;MACda,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,OAAO;MACLF,MAAM;MACNc,UAAU;MACVS,UAAU;MACVO,WAAW;MACX7B;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}