{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Event List\", -1 /* HOISTED */)), $data.events.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.events, event => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: event.id\n    }, [_createTextVNode(_toDisplayString(event.name) + \" - \" + _toDisplayString($options.formatDate(event.date)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editEvent(event.id)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" Edit button to navigate to the edit page \")]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"No events available.\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","events","length","_hoisted_1","_Fragment","_renderList","event","id","_createTextVNode","_toDisplayString","name","$options","formatDate","date","onClick","$event","editEvent","_hoisted_2","_createCommentVNode","_hoisted_3"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Event List</h2>\n    <ul v-if=\"events.length\">\n      <li v-for=\"event in events\" :key=\"event.id\">\n        {{ event.name }} - {{ formatDate(event.date) }}\n        <button @click=\"editEvent(event.id)\">Edit</button> <!-- Edit button to navigate to the edit page -->\n      </li>\n    </ul>\n    <p v-else>No events available.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      events: [], // Store the list of events\n      errorMessage: '' // For any error messages while fetching events\n    };\n  },\n  created() {\n    // Fetch all events when the component is created\n    axios.get('http://localhost:3000/api/events')\n      .then(response => {\n        this.events = response.data; // Store the fetched events\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n        this.errorMessage = 'Failed to load events.';\n      });\n  },\n  methods: {\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0]; // Formats the date as YYYY-MM-DD\n    },\n    editEvent(eventId) {\n      // Use $router.push to navigate to the edit page for the selected event\n      console.log(`Navigating to edit event with ID: ${eventId}`);\n      this.$router.push({ name: 'edit-event', params: { id: eventId } });\n    }\n  }\n};\n</script>\n"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CASM,c,0BARJC,mBAAA,CAAmB,YAAf,YAAU,sBACJC,KAAA,CAAAC,MAAM,CAACC,MAAM,I,cAAvBJ,mBAAA,CAKK,MARTK,UAAA,I,kBAIML,mBAAA,CAGKM,SAAA,QAPXC,WAAA,CAI0BL,KAAA,CAAAC,MAAM,EAAfK,KAAK;yBAAhBR,mBAAA,CAGK;MAHwBD,GAAG,EAAES,KAAK,CAACC;QAJ9CC,gBAAA,CAAAC,gBAAA,CAKWH,KAAK,CAACI,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGE,QAAA,CAAAC,UAAU,CAACN,KAAK,CAACO,IAAI,KAAI,GAC/C,iBAAAd,mBAAA,CAAkD;MAAzCe,OAAK,EAAAC,MAAA,IAAEJ,QAAA,CAAAK,SAAS,CAACV,KAAK,CAACC,EAAE;OAAG,MAAI,iBANjDU,UAAA,GAM2DC,mBAAA,8CAAiD,C;qDAGxGpB,mBAAA,CAAkC,KATtCqB,UAAA,EASc,sBAAoB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}