{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nexport default {\n  name: 'App',\n  computed: {\n    // Check if the user is logged in by checking the presence of the token in localStorage\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n  },\n  methods: {\n    // Logout method to clear token and redirect to login\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username'); // Clear stored username\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Decode the token to get the username and store it in localStorage\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      localStorage.setItem('username', payload.username);\n    }\n  }\n};","map":{"version":3,"names":["name","computed","isLoggedIn","localStorage","getItem","methods","logout","removeItem","$router","push","alert","created","token","payload","JSON","parse","atob","split","setItem","username"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <!-- Navigation Links -->\n      <p v-if=\"isLoggedIn\">Welcome, {{ username }}!</p>\n      <router-link v-if=\"isLoggedIn\" to=\"/events\">Events    </router-link>\n      <button v-if=\"isLoggedIn\" @click=\"logout\">Logout</button> <!-- Logout Button -->\n    </nav>\n\n    <!-- Routed components will be displayed here -->\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  computed: {\n    // Check if the user is logged in by checking the presence of the token in localStorage\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n  },\nmethods: {\n    // Logout method to clear token and redirect to login\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username'); // Clear stored username\n      this.$router.push('/login');\n      alert('You have successfully logged out!');\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Decode the token to get the username and store it in localStorage\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      localStorage.setItem('username', payload.username);\n    }\n  }\n};\n</script>\n"],"mappings":";;AAeA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxC;EACF,CAAC;EACHC,OAAO,EAAE;IACL;IACAC,MAAMA,CAAA,EAAG;MACPH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;MAChCJ,YAAY,CAACI,UAAU,CAAC,UAAU,CAAC,EAAE;MACrC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC3BC,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAIT,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIQ,KAAK,EAAE;MACT;MACA,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDd,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEL,OAAO,CAACM,QAAQ,CAAC;IACpD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}