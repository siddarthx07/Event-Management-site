{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: localStorage.getItem('username') || '',\n      token: localStorage.getItem('token') || '',\n      searchQuery: '',\n      startDate: '',\n      endDate: '',\n      showDropdown: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!this.token;\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      this.token = '';\n      this.username = '';\n      this.$router.push('/');\n      alert('You have successfully logged out!');\n    },\n    emitSearch() {\n      // Emit an event to notify child components about the search/filter criteria\n      this.$root.$emit('filter-events', {\n        search: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    },\n    handleFilter(filterCriteria) {\n      // Utilize the filterCriteria to update local state and fetch events\n      this.searchQuery = filterCriteria.search;\n      this.startDate = filterCriteria.startDate;\n      this.endDate = filterCriteria.endDate;\n      this.fetchEvents();\n    },\n    fetchEvents() {\n      // This method should be implemented to fetch events based on the current filters\n      // Since App.vue is typically a layout component, consider moving fetchEvents to a relevant child component\n      // Or implement a global state management (e.g., Vuex) to handle event data\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        console.log('Token Payload:', payload);\n        localStorage.setItem('username', payload.username);\n        localStorage.setItem('role', payload.role);\n        this.username = payload.username;\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('role');\n      }\n    }\n\n    // Listen for filter events\n    this.$root.$on('filter-events', this.handleFilter);\n  },\n  beforeUnmount() {\n    // Updated from beforeDestroy\n    // Clean up event listeners\n    this.$root.$off('filter-events', this.handleFilter);\n  }\n};","map":{"version":3,"names":["name","data","username","localStorage","getItem","token","searchQuery","startDate","endDate","showDropdown","computed","isLoggedIn","methods","logout","removeItem","$router","push","alert","emitSearch","$root","$emit","search","handleFilter","filterCriteria","fetchEvents","created","payload","JSON","parse","atob","split","console","log","setItem","role","error","$on","beforeUnmount","$off"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar\">\n      <div class=\"navbar-left\">\n        <router-link to=\"/\" class=\"site-name\">YourSiteName</router-link>\n      </div>\n      \n      <div class=\"navbar-center\">\n        <!-- Search Bar -->\n        <input \n          v-model=\"searchQuery\" \n          class=\"search-input\" \n          placeholder=\"Search by name\" \n          @input=\"emitSearch\"\n        />\n\n        <!-- Date Range Filters -->\n        <div class=\"date-filters\">\n          <input \n            type=\"date\" \n            v-model=\"startDate\" \n            class=\"date-input\" \n            @change=\"emitSearch\" \n            placeholder=\"Start Date\"\n          />\n          <span class=\"date-separator\">-</span>\n          <input \n            type=\"date\" \n            v-model=\"endDate\" \n            class=\"date-input\" \n            @change=\"emitSearch\" \n            placeholder=\"End Date\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"navbar-right\">\n        <!-- If User is Logged In -->\n        <div v-if=\"isLoggedIn\" class=\"user-dropdown\" @mouseover=\"showDropdown = true\" @mouseleave=\"showDropdown = false\">\n          <span class=\"username\">Welcome, {{ username }}!</span>\n          <div v-if=\"showDropdown\" class=\"dropdown-menu\">\n            <button @click=\"logout\" class=\"dropdown-item\">Logout</button>\n          </div>\n        </div>\n\n        <!-- If User is Not Logged In -->\n        <div v-else class=\"auth-links\">\n          <router-link to=\"/login\" class=\"nav-link\">Sign In</router-link>\n          <router-link to=\"/register\" class=\"nav-link\">Sign Up</router-link>\n        </div>\n      </div>\n    </nav>\n    \n    <!-- Routed components will be displayed here -->\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      username: localStorage.getItem('username') || '',\n      token: localStorage.getItem('token') || '',\n      searchQuery: '',\n      startDate: '',\n      endDate: '',\n      showDropdown: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!this.token;\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      this.token = '';\n      this.username = '';\n      this.$router.push('/');\n      alert('You have successfully logged out!');\n    },\n    emitSearch() {\n      // Emit an event to notify child components about the search/filter criteria\n      this.$root.$emit('filter-events', {\n        search: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    },\n    handleFilter(filterCriteria) {\n      // Utilize the filterCriteria to update local state and fetch events\n      this.searchQuery = filterCriteria.search;\n      this.startDate = filterCriteria.startDate;\n      this.endDate = filterCriteria.endDate;\n      this.fetchEvents();\n    },\n    fetchEvents() {\n      // This method should be implemented to fetch events based on the current filters\n      // Since App.vue is typically a layout component, consider moving fetchEvents to a relevant child component\n      // Or implement a global state management (e.g., Vuex) to handle event data\n    }\n  },\n  created() {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        console.log('Token Payload:', payload);\n        localStorage.setItem('username', payload.username);\n        localStorage.setItem('role', payload.role);\n        this.username = payload.username;\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('role');\n      }\n    }\n\n    // Listen for filter events\n    this.$root.$on('filter-events', this.handleFilter);\n  },\n  beforeUnmount() { // Updated from beforeDestroy\n    // Clean up event listeners\n    this.$root.$off('filter-events', this.handleFilter);\n  }\n};\n</script>\n\n<style scoped>\n/* Global Box Sizing */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n/* Navbar Styles */\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #6c63ff;\n  padding: 10px 20px;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\n/* Site Name */\n.site-name {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #fff;\n  text-decoration: none;\n}\n\n.site-name:hover {\n  text-decoration: underline;\n}\n\n/* Center Section (Search and Filters) */\n.navbar-center {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.search-input {\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  width: 200px;\n}\n\n.search-input:focus {\n  outline: none;\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.7);\n}\n\n.date-filters {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.date-input {\n  padding: 5px;\n  border: none;\n  border-radius: 4px;\n}\n\n.date-input:focus {\n  outline: none;\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.7);\n}\n\n.date-separator {\n  color: #fff;\n  font-size: 1rem;\n}\n\n/* Right Section (Auth Links or User Dropdown) */\n.navbar-right {\n  display: flex;\n  align-items: center;\n}\n\n/* Auth Links */\n.auth-links .nav-link {\n  margin-left: 15px;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 500;\n}\n\n.auth-links .nav-link:hover {\n  text-decoration: underline;\n}\n\n/* User Dropdown */\n.user-dropdown {\n  position: relative;\n  cursor: pointer;\n}\n\n.username {\n  font-weight: 500;\n}\n\n.dropdown-menu {\n  position: absolute;\n  right: 0;\n  top: 35px;\n  background-color: #fff;\n  color: #333;\n  border-radius: 4px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  min-width: 100px;\n  z-index: 1001;\n}\n\n.dropdown-item {\n  padding: 10px 15px;\n  cursor: pointer;\n  background-color: #fff;\n  border: none;\n  width: 100%;\n  text-align: left;\n  font-size: 1rem;\n}\n\n.dropdown-item:hover {\n  background-color: #f0f0f0;\n}\n\n/* Responsive Design */\n@media (max-width: 992px) {\n  .search-input {\n    width: 150px;\n  }\n\n  .navbar-center {\n    gap: 10px;\n  }\n}\n\n@media (max-width: 768px) {\n  .navbar {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .navbar-center {\n    width: 100%;\n    margin-top: 10px;\n  }\n\n  .search-input {\n    width: 100%;\n  }\n\n  .date-filters {\n    width: 100%;\n    justify-content: space-between;\n  }\n\n  .navbar-right {\n    width: 100%;\n    justify-content: flex-end;\n    margin-top: 10px;\n  }\n}\n\n@media (max-width: 480px) {\n  .site-name {\n    font-size: 1.2rem;\n  }\n\n  .search-input {\n    width: 100%;\n  }\n\n  .date-input {\n    width: 45%;\n  }\n}\n</style>\n"],"mappings":";;AA2DA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,KAAK,EAAE;MAChDC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,KAAK,EAAE;MAC1CE,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,CAAC,IAAI,CAACN,KAAK;IACrB;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACPV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;MAChCX,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;MACnCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;MAC/B,IAAI,CAACT,KAAI,GAAI,EAAE;MACf,IAAI,CAACH,QAAO,GAAI,EAAE;MAClB,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACtBC,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX;MACA,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,eAAe,EAAE;QAChCC,MAAM,EAAE,IAAI,CAACf,WAAW;QACxBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;IACJ,CAAC;IACDc,YAAYA,CAACC,cAAc,EAAE;MAC3B;MACA,IAAI,CAACjB,WAAU,GAAIiB,cAAc,CAACF,MAAM;MACxC,IAAI,CAACd,SAAQ,GAAIgB,cAAc,CAAChB,SAAS;MACzC,IAAI,CAACC,OAAM,GAAIe,cAAc,CAACf,OAAO;MACrC,IAAI,CAACgB,WAAW,CAAC,CAAC;IACpB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ;MACA;MACA;IAAA;EAEJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMpB,KAAI,GAAIF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIC,KAAK,EAAE;MACT,IAAI;QACF,MAAMqB,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACxB,KAAK,CAACyB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,OAAO,CAAC;QACtCvB,YAAY,CAAC8B,OAAO,CAAC,UAAU,EAAEP,OAAO,CAACxB,QAAQ,CAAC;QAClDC,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEP,OAAO,CAACQ,IAAI,CAAC;QAC1C,IAAI,CAAChC,QAAO,GAAIwB,OAAO,CAACxB,QAAQ;MAClC,EAAE,OAAOiC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ChC,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;QAChCX,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;QACnCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;;IAEA;IACA,IAAI,CAACK,KAAK,CAACiB,GAAG,CAAC,eAAe,EAAE,IAAI,CAACd,YAAY,CAAC;EACpD,CAAC;EACDe,aAAaA,CAAA,EAAG;IAAE;IAChB;IACA,IAAI,CAAClB,KAAK,CAACmB,IAAI,CAAC,eAAe,EAAE,IAAI,CAAChB,YAAY,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}