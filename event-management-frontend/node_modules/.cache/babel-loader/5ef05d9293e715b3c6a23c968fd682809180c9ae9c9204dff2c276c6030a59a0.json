{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['id'],\n  // Receive event ID as a prop\n  data() {\n    return {\n      event: null,\n      // Store event data\n      errorMessage: ''\n    };\n  },\n  created() {\n    this.fetchEventDetails(); // Fetch event details when the component is created\n  },\n  methods: {\n    fetchEventDetails() {\n      axios.get(`http://localhost:3000/api/events/${this.id}`) // Remove Authorization header\n      .then(response => {\n        this.event = response.data;\n      }).catch(error => {\n        console.error('Error fetching event details:', error);\n        this.errorMessage = 'Failed to load event details.';\n      });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","event","errorMessage","created","fetchEventDetails","methods","get","id","then","response","catch","error","console","formatDate","dateString","date","Date","toISOString","split"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/EventDetailsPublic.vue"],"sourcesContent":["<template>\n    <h2> hi</h2>\n  <div v-if=\"event\">\n    <h2>{{ event.name }} hi</h2>\n    <p><strong>Description:</strong> {{ event.description }}</p>\n    <p><strong>Date:</strong> {{ formatDate(event.date) }}</p>\n    <!-- Add more event details here if needed -->\n  </div>\n  <div v-else>\n    <p>Loading event details...</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'],  // Receive event ID as a prop\n  data() {\n    return {\n      event: null,  // Store event data\n      errorMessage: ''\n    }; \n  },\n  created() {\n    this.fetchEventDetails();  // Fetch event details when the component is created\n  },\n  methods: {\n    fetchEventDetails() {\n      axios.get(`http://localhost:3000/api/events/${this.id}`)  // Remove Authorization header\n      .then(response => {\n        this.event = response.data;\n      })\n      .catch(error => {\n        console.error('Error fetching event details:', error);\n        this.errorMessage = 'Failed to load event details.';\n      });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];  // Format date as YYYY-MM-DD\n    }\n  }\n};\n</script>\n"],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EAAG;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MAAG;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAG;EAC7B,CAAC;EACDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClBN,KAAK,CAACQ,GAAG,CAAC,oCAAoC,IAAI,CAACC,EAAE,EAAE,EAAG;MAAA,CACzDC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,KAAI,GAAIQ,QAAQ,CAACT,IAAI;MAC5B,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACT,YAAW,GAAI,+BAA+B;MACrD,CAAC,CAAC;IACJ,CAAC;IACDW,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAG;IAC5C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}