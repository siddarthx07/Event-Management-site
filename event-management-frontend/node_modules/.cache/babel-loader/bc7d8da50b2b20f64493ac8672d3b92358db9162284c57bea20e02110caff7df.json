{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CreateEvent from './CreateEvent.vue';\nexport default {\n  components: {\n    CreateEvent // Import the CreateEvent component\n  },\n  data() {\n    return {\n      events: [],\n      // Holds the list of events created by the organizer\n      searchQuery: '',\n      // For search functionality\n      startDate: '',\n      endDate: ''\n    };\n  },\n  created() {\n    this.fetchMyEvents(); // Fetch events created by the organizer on component creation\n  },\n  methods: {\n    // Fetch events created by the logged-in organizer\n    fetchMyEvents() {\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n      console.log('Fetching events with params:', params); // Debug log\n\n      axios.get('http://localhost:3000/api/events/myevents', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token\n        }\n      }).then(response => {\n        this.events = response.data; // Store events data\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    // Edit an event (redirect to edit page)\n    editEvent(eventId) {\n      this.$router.push({\n        name: 'edit-event',\n        params: {\n          id: eventId\n        }\n      });\n    },\n    // Clear search and date filters\n    clearFilters() {\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchMyEvents();\n    },\n    // Delete an event\n    deleteEvent(eventId) {\n      if (confirm('Are you sure you want to delete this event?')) {\n        axios.delete(`http://localhost:3000/api/events/${eventId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT token\n          }\n        }).then(() => {\n          alert('Event deleted successfully!');\n          this.fetchMyEvents(); // Refresh the events list after deletion\n        }).catch(error => {\n          console.error('Error deleting event:', error);\n        });\n      }\n    },\n    // Format date for display\n    formatDate(dateString) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options); // e.g., January 1, 2024\n    },\n    // Refresh events after event creation or deletion\n    refreshEvents() {\n      this.fetchMyEvents(); // Re-fetch the events list\n    },\n    // Scroll the event list to the left\n    scrollLeft() {\n      const container = this.$refs.eventList;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: -scrollAmount,\n        behavior: 'smooth'\n      });\n    },\n    // Scroll the event list to the right\n    scrollRight() {\n      const container = this.$refs.eventList;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","CreateEvent","components","data","events","searchQuery","startDate","endDate","created","fetchMyEvents","methods","params","name","console","log","get","headers","Authorization","localStorage","getItem","then","response","catch","error","editEvent","eventId","$router","push","id","clearFilters","deleteEvent","confirm","delete","alert","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","refreshEvents","scrollLeft","container","$refs","eventList","scrollAmount","clientWidth","scrollBy","left","behavior","scrollRight"],"sources":["/Users/siddarthbandi/Desktop/SID/project/event-management-platform/event-management-frontend/src/components/OrganizeEvents.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2 class=\"text-center mb-4\">Organize Your Events</h2>\n\n    <!-- Create Event Section -->\n    <div class=\"section\">\n      <create-event @event-created=\"refreshEvents\" />\n    </div>\n\n    <hr class=\"divider\" />\n\n    <!-- Search Bar Section -->\n    <div class=\"section\">\n      <label for=\"searchQuery\"><strong>Search Events:</strong></label>\n      <input \n        v-model=\"searchQuery\" \n        placeholder=\"Search by name\" \n        @input=\"fetchMyEvents\" \n        class=\"form-control\"\n      />\n    </div>\n\n    <hr class=\"divider\" />\n\n    <!-- Date Range Filter Section -->\n    <div class=\"section\">\n      <strong>Filter by Date:</strong>\n      <div class=\"date-filters\">\n        <div class=\"filter-item\">\n          <label for=\"startDate\">Start Date:</label>\n          <input \n            type=\"date\" \n            v-model=\"startDate\" \n            @change=\"fetchMyEvents\" \n            class=\"form-control\"\n          />\n        </div>\n\n        <div class=\"filter-item\">\n          <label for=\"endDate\">End Date:</label>\n          <input \n            type=\"date\" \n            v-model=\"endDate\" \n            @change=\"fetchMyEvents\" \n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <button class=\"clear-btn\" @click=\"clearFilters\">Clear Filters</button>\n    </div>\n\n    <hr class=\"divider\" />\n\n    <!-- Navigation Buttons -->\n    <div class=\"navigation-buttons mb-3\">\n      <button \n        class=\"nav-button left-button\" \n        @click=\"scrollLeft\" \n        aria-label=\"Scroll Left\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      <button \n        class=\"nav-button right-button\" \n        @click=\"scrollRight\" \n        aria-label=\"Scroll Right\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n\n    <!-- Event List Section -->\n    <div class=\"section\">\n      <div \n        v-if=\"events.length\" \n        class=\"event-list-container\" \n        ref=\"eventList\"\n      >\n        <div \n          v-for=\"event in events\" \n          :key=\"event.id\" \n          class=\"card event-card\"\n        >\n          <img \n            :src=\"event.image ? `http://localhost:3000${event.image}` : 'http://localhost:3000/uploads/default-image.jpg'\" \n            alt=\"Event Image\" \n            class=\"card-img-top\"\n            loading=\"lazy\"\n          />\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ event.name }}</h5>\n            <p class=\"card-text\"><strong>Date:</strong> {{ formatDate(event.date) }}</p>\n            <div class=\"event-actions\">\n              <router-link \n                :to=\"{ name: 'event-details', params: { id: event.id } }\" \n                class=\"btn btn-primary\"\n              >\n                View Details\n              </router-link>\n              <button class=\"edit-btn\" @click=\"editEvent(event.id)\">Edit</button>\n              <button class=\"delete-btn\" @click=\"deleteEvent(event.id)\">Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p v-else class=\"text-center\">You haven't organized any events yet.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CreateEvent from './CreateEvent.vue';\n\nexport default {\n  components: {\n    CreateEvent  // Import the CreateEvent component\n  },\n  data() {\n    return {\n      events: [],  // Holds the list of events created by the organizer\n      searchQuery: '',  // For search functionality\n      startDate: '',\n      endDate: ''\n    };\n  },\n  created() {\n    this.fetchMyEvents();  // Fetch events created by the organizer on component creation\n  },\n  methods: {\n    // Fetch events created by the logged-in organizer\n    fetchMyEvents() {\n      const params = {\n        name: this.searchQuery,\n        startDate: this.startDate,\n        endDate: this.endDate\n      };\n      console.log('Fetching events with params:', params);  // Debug log\n\n      axios.get('http://localhost:3000/api/events/myevents', {\n        params,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`  // Include JWT token\n        }\n      })\n      .then(response => {\n        this.events = response.data;  // Store events data\n      })\n      .catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n\n    // Edit an event (redirect to edit page)\n    editEvent(eventId) {\n      this.$router.push({ name: 'edit-event', params: { id: eventId } });\n    },\n\n    // Clear search and date filters\n    clearFilters() {\n      this.searchQuery = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.fetchMyEvents();\n    },\n\n    // Delete an event\n    deleteEvent(eventId) {\n      if (confirm('Are you sure you want to delete this event?')) {\n        axios.delete(`http://localhost:3000/api/events/${eventId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`  // Include JWT token\n          }\n        })\n        .then(() => {\n          alert('Event deleted successfully!');\n          this.fetchMyEvents();  // Refresh the events list after deletion\n        })\n        .catch(error => {\n          console.error('Error deleting event:', error);\n        });\n      }\n    },\n\n    // Format date for display\n    formatDate(dateString) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(dateString).toLocaleDateString(undefined, options);  // e.g., January 1, 2024\n    },\n\n    // Refresh events after event creation or deletion\n    refreshEvents() {\n      this.fetchMyEvents();  // Re-fetch the events list\n    },\n\n    // Scroll the event list to the left\n    scrollLeft() {\n      const container = this.$refs.eventList;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: -scrollAmount,\n        behavior: 'smooth'\n      });\n    },\n\n    // Scroll the event list to the right\n    scrollRight() {\n      const container = this.$refs.eventList;\n      const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width\n      container.scrollBy({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Global Box Sizing */\n* {\n  box-sizing: border-box;\n}\n\n/* Section Styling */\n.section {\n  margin-bottom: 20px;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\n/* Divider Styling */\n.divider {\n  border: none;\n  border-top: 2px solid #ddd;\n  margin: 20px 0;\n}\n\n/* Date Filters */\n.date-filters {\n  display: flex;\n  gap: 20px;\n  margin-top: 10px;\n  flex-wrap: wrap;\n}\n\n.filter-item {\n  display: flex;\n  flex-direction: column;\n}\n\n/* Search and Filter Inputs */\n.form-control {\n  width: 100%;\n  padding: 8px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n/* Clear Filters Button */\n.clear-btn {\n  margin-top: 10px;\n  padding: 8px 16px;\n  background-color: #f0f0f0;\n  color: #333;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.clear-btn:hover {\n  background-color: #e0e0e0;\n}\n\n/* Navigation Buttons Container */\n.navigation-buttons {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: relative;\n  margin-bottom: 15px;\n}\n\n/* Navigation Buttons */\n.nav-button {\n  width: 45px;\n  height: 45px;\n  margin-left: 12px;\n  border: none;\n  background-color: #6c63ff; /* Primary color */\n  color: #fff;\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 1.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.nav-button:hover {\n  background-color: #574b90; /* Darker shade on hover */\n  transform: translateY(-3px);\n}\n\n.nav-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.5);\n}\n\n.left-button {\n  /* Additional styles if needed */\n}\n\n.right-button {\n  /* Additional styles if needed */\n}\n\n/* Event List Container */\n.event-list-container {\n  display: flex;\n  overflow-x: auto;\n  gap: 20px; /* Spacing between cards */\n  padding: 10px;\n  scroll-behavior: smooth; /* Smooth scrolling */\n}\n\n.event-list-container::-webkit-scrollbar {\n  height: 8px; /* Custom scrollbar height */\n}\n\n.event-list-container::-webkit-scrollbar-thumb {\n  background-color: #888; /* Scrollbar color */\n  border-radius: 4px;\n}\n\n.event-list-container::-webkit-scrollbar-thumb:hover {\n  background-color: #555;\n}\n\n/* Event Card */\n.event-card {\n  flex: 0 0 auto; /* Prevent cards from shrinking */\n  width: 300px; /* Fixed width */\n  background-color: #fff; /* Background color for better contrast */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Ensure content doesn't overflow */\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.2s ease;\n}\n\n.event-card:hover {\n  transform: translateY(-5px); /* Slight lift on hover */\n}\n\n/* Card Image */\n.card-img-top {\n  width: 100%; /* Full width */\n  height: 180px; /* Fixed height */\n  object-fit: cover; /* Maintain aspect ratio and cover the area */\n}\n\n/* Card Body */\n.card-body {\n  padding: 15px;\n  flex-grow: 1; /* Ensure the body takes up remaining space */\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n/* Card Title */\n.card-title {\n  font-size: 1.25rem;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n/* Card Text */\n.card-text {\n  font-size: 0.95rem;\n  color: #666;\n  margin-bottom: 15px;\n}\n\n/* Event Actions */\n.event-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: auto;\n}\n\n/* Buttons within Event Actions */\n.btn-primary {\n  padding: 8px 12px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  text-decoration: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.edit-btn,\n.delete-btn {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  color: #fff;\n  transition: background-color 0.3s ease;\n}\n\n.edit-btn {\n  background-color: #28a745; /* Green */\n}\n\n.edit-btn:hover {\n  background-color: #218838;\n}\n\n.delete-btn {\n  background-color: #dc3545; /* Red */\n}\n\n.delete-btn:hover {\n  background-color: #c82333;\n}\n\n/* Responsive Adjustments */\n@media (max-width: 992px) {\n  .event-card {\n    width: 250px; /* Reduce card width on medium screens */\n  }\n\n  .card-img-top {\n    height: 160px; /* Adjust image height */\n  }\n}\n\n@media (max-width: 768px) {\n  .date-filters {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .navigation-buttons {\n    justify-content: center;\n  }\n\n  .nav-button {\n    width: 40px;\n    height: 40px;\n    font-size: 1rem;\n  }\n\n  .event-card {\n    width: 220px; /* Further reduce card width on small screens */\n  }\n\n  .card-img-top {\n    height: 140px; /* Adjust image height */\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 35px;\n    height: 35px;\n    font-size: 0.9rem;\n  }\n\n  .event-card {\n    width: 200px; /* Minimal card width on very small screens */\n  }\n\n  .card-img-top {\n    height: 120px; /* Adjust image height */\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}